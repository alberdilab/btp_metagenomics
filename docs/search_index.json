[["index.html", "AlberdiLab | Manuscript in prep Lepus europaeus metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Manuscript in prep Lepus europaeus metagenomics Lukas Fix, Antton Alberdi, Raphael Eisenhofer[University of Copenhagen, raphael.eisenhofer@sund.ku.dk] 2024-11-13 Chapter 1 Introduction 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/btp_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) #library(lmerTest) library(Hmsc) library(corrplot) library(lme4) library(nlme) library(ANCOMBC) "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0167_metadata.tsv.gz&quot;) %&gt;% rename(sample=1) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0167_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.1.3 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0167_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0167_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0167.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts_raw &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) diet_colors&lt;- c(&quot;#00AEDB&quot;,&quot;#00AFA1&quot;, &quot;#00B159&quot;) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, #genome_gifts_raw, # genome_gifts, phylum_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_idmeed7bek226ieacq3flw, .table th.tinytable_css_idmeed7bek226ieacq3flw { border-bottom: solid 0.1em #d3d8dc; } Total Average 354.78 4.86 ± 1.43 3.2 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_idlcgjvowxrzw9wgujiyq0, .table th.tinytable_css_idlcgjvowxrzw9wgujiyq0 { border-bottom: solid 0.1em #d3d8dc; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01248 0.35511316 0.004968189 2.3488847 8.70559471 EHI01253 0.15065275 0.007306842 0.7958509 3.15690325 EHI01254 0.17713763 0.008641986 0.7698065 3.46426201 EHI01256 0.25601713 0.011186636 1.6153318 4.62283158 EHI01257 0.44278829 0.028219625 1.6424801 6.37891199 EHI01258 0.18025206 0.021893733 0.9061351 3.11043101 EHI01259 0.15785294 0.002551853 1.1230441 3.63491878 EHI01264 0.10980388 0.194713827 0.8459937 1.94399131 EHI01265 0.20096759 0.027838593 0.8781951 4.42282487 EHI01266 0.16495605 0.004145198 1.0104139 3.02528367 EHI01268 0.11654687 0.043538943 0.4199424 2.18818215 EHI01270 0.15490780 0.006255568 0.7491831 1.85948097 EHI01271 0.08546883 0.008773597 0.5176363 1.98955149 EHI01272 0.12521297 0.004006385 0.6499615 2.73090343 EHI01273 0.18374616 0.099650655 1.1683174 3.70517179 EHI01339 0.21133261 0.082072269 1.0958456 4.01574329 EHI01340 0.32934907 0.078517930 2.2365738 0.01091408 EHI01341 0.26571726 0.023522716 1.3209604 3.21859599 EHI01342 0.21296031 0.114741396 1.6557153 3.12134276 EHI01343 0.18906343 0.112255644 1.1418032 3.97856774 EHI01345 0.20874962 0.177845762 1.5032861 3.47998475 EHI01387 0.23576644 4.644537522 0.4353141 1.57377576 EHI01389 0.22833259 0.150555697 1.5157673 4.06490864 EHI02064 0.36180367 0.073958684 1.7560470 3.13915797 EHI02074 0.17452029 0.007193557 0.5946409 1.57287231 EHI02082 0.39485375 0.094697133 1.6620324 4.43909934 EHI02098 0.52162812 0.139932802 1.6241102 3.79457081 EHI02760 0.27278081 0.117175084 0.5856983 2.76896198 EHI02766 0.34206992 0.026262224 1.0131013 3.38893828 EHI02767 0.39776392 0.027589923 1.4920663 4.50953237 EHI02768 0.37285123 0.057921344 0.6534089 2.85662184 EHI02769 0.23901114 0.015625837 0.5237186 1.80651100 EHI02770 0.26006960 0.015636651 0.8099749 2.58298046 EHI02771 0.43362442 0.078674560 0.8927819 3.75367475 EHI02772 0.39350819 0.133333189 0.9955418 3.97147448 EHI02773 0.47175703 0.004630464 1.2818831 4.30891829 EHI02774 0.35219413 0.031638370 0.9683903 3.44730645 EHI02775 0.31535990 0.006253892 1.2347646 3.06181082 EHI02776 0.28106302 0.008270565 0.8075659 3.52331025 EHI02779 0.34735466 0.029550201 0.7625330 2.52847910 EHI02780 0.33353488 0.041239947 1.1610012 3.29078029 EHI02784 0.31121206 0.019685481 0.8413476 3.58321420 EHI02785 0.32741021 0.014638539 0.9515597 3.36888357 EHI02789 0.42120190 0.170396074 1.0281381 4.40650732 EHI02792 0.36123108 0.015462248 1.3463286 3.76356741 EHI02796 1.07935523 0.004050961 1.0416445 4.15780523 EHI02797 0.41305976 0.086506413 0.8415216 3.53097613 EHI02801 0.52781243 0.036344570 0.8388848 2.91079981 EHI02804 0.42394759 0.159371043 1.0649697 4.43245152 EHI02806 0.44246621 0.089581175 1.7887921 4.03903963 EHI02811 0.29358681 0.013750538 1.1729986 3.28550574 EHI02812 0.36744061 0.057112125 0.8678336 4.12914616 EHI02817 0.34058911 0.023035237 0.8059566 2.90095167 EHI02819 0.23782849 0.002853452 2.0747359 1.56371986 EHI02822 0.32932578 0.266269016 0.8566608 2.91142265 EHI02823 0.46831299 0.319368041 0.9890243 4.23615481 EHI02824 0.92746482 0.011070271 0.9754646 2.92498444 EHI02826 0.44208850 0.043681080 0.9461530 4.12595664 EHI02829 0.61719061 0.020333202 1.0838773 5.08522117 EHI02830 0.63356691 1.608315016 0.8548023 3.32875927 EHI02831 0.48579678 0.249927066 1.0747457 3.71679223 EHI02832 0.55980508 0.002363983 1.1179965 3.46662093 EHI02835 0.36642675 0.046904442 1.3031776 4.02345778 EHI02836 0.73282342 0.011061548 0.7145331 2.22777765 EHI02837 0.63165003 0.233233891 1.2696173 4.08635940 EHI02838 0.71576136 0.008130997 1.6067697 4.58593636 EHI02839 0.53704346 0.005429642 1.1846421 5.22051908 EHI02840 0.40520960 0.170732154 0.9714674 4.15870634 EHI02841 0.54078237 0.066720106 1.3402000 4.38657015 EHI02843 0.51124373 0.025768852 1.0209520 3.79170293 EHI02844 0.33724044 0.257831962 1.1673368 2.84963063 EHI02845 0.41473841 0.000195490 0.5934703 2.25767567 EHI02846 0.43528710 0.009803089 0.4380401 2.07829540 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() .table td.tinytable_css_idxc3bu8wxdwuvfi4gw8er, .table th.tinytable_css_idxc3bu8wxdwuvfi4gw8er { border-bottom: solid 0.1em #d3d8dc; } Low quality Mapped to host Unmapped Mapped to MAGs 0.3650321 0.1481815 1.08684 3.461414 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.3 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction*100,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
