[["index.html", "AlberdiLab | Fix et al 2025 Brush-tail possum metagenomics Chapter 1 Introduction 1.1 Libaries", " AlberdiLab | Fix et al 2025 Brush-tail possum metagenomics Lukas Fix, Antton Alberdi, Raphael Eisenhofer Last update: 2025-05-22 Chapter 1 Introduction 1.1 Libaries # Base library(R.utils) ## Warning: Paket &#39;R.utils&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: R.oo ## Warning: Paket &#39;R.oo&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: R.methodsS3 ## Warning: Paket &#39;R.methodsS3&#39; wurde unter R Version 4.3.3 erstellt ## R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help. ## R.oo v1.27.0 (2024-11-01 18:00:02 UTC) successfully loaded. See ?R.oo for help. ## ## Attache Paket: &#39;R.oo&#39; ## Das folgende Objekt ist maskiert &#39;package:R.methodsS3&#39;: ## ## throw ## Die folgenden Objekte sind maskiert von &#39;package:methods&#39;: ## ## getClasses, getMethods ## Die folgenden Objekte sind maskiert von &#39;package:base&#39;: ## ## attach, detach, load, save ## R.utils v2.12.3 (2023-11-18 01:00:02 UTC) successfully loaded. See ?R.utils for help. ## ## Attache Paket: &#39;R.utils&#39; ## Das folgende Objekt ist maskiert &#39;package:utils&#39;: ## ## timestamp ## Die folgenden Objekte sind maskiert von &#39;package:base&#39;: ## ## cat, commandArgs, getOption, isOpen, nullfile, parse, warnings library(knitr) ## Warning: Paket &#39;knitr&#39; wurde unter R Version 4.3.3 erstellt library(tidyverse) ## Warning: Paket &#39;tidyverse&#39; wurde unter R Version 4.3.3 erstellt ## Warning: Paket &#39;ggplot2&#39; wurde unter R Version 4.3.3 erstellt ## Warning: Paket &#39;tidyr&#39; wurde unter R Version 4.3.3 erstellt ## Warning: Paket &#39;readr&#39; wurde unter R Version 4.3.3 erstellt ## Warning: Paket &#39;dplyr&#39; wurde unter R Version 4.3.3 erstellt ## Warning: Paket &#39;stringr&#39; wurde unter R Version 4.3.3 erstellt ## ── Attaching core tidyverse packages ─────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ───────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ tidyr::extract() masks R.utils::extract() ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(devtools) ## Warning: Paket &#39;devtools&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: usethis ## Warning: Paket &#39;usethis&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;devtools&#39; ## ## Die folgenden Objekte sind maskiert von &#39;package:R.oo&#39;: ## ## check, unload library(tinytable) ## Warning: Paket &#39;tinytable&#39; wurde unter R Version 4.3.3 erstellt library(rairtable) ## Warning: Paket &#39;rairtable&#39; wurde unter R Version 4.3.3 erstellt library(readxl) # For tree handling library(ape) ## ## Attache Paket: &#39;ape&#39; ## ## Das folgende Objekt ist maskiert &#39;package:dplyr&#39;: ## ## where library(phyloseq) library(phytools) ## Warning: Paket &#39;phytools&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: maps ## Warning: Paket &#39;maps&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;maps&#39; ## ## Das folgende Objekt ist maskiert &#39;package:purrr&#39;: ## ## map ## ## ## Attache Paket: &#39;phytools&#39; ## ## Das folgende Objekt ist maskiert &#39;package:R.utils&#39;: ## ## getParent # For plotting library(ggplot2) # Begin plotting using ggplot2 library(ggrepel) ## Warning: Paket &#39;ggrepel&#39; wurde unter R Version 4.3.3 erstellt library(ggpubr) ## Warning: Paket &#39;ggpubr&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;ggpubr&#39; ## ## Das folgende Objekt ist maskiert &#39;package:ape&#39;: ## ## rotate library(ggnewscale) ## Warning: Paket &#39;ggnewscale&#39; wurde unter R Version 4.3.3 erstellt library(gridExtra) ## Warning: Paket &#39;gridExtra&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;gridExtra&#39; ## ## Das folgende Objekt ist maskiert &#39;package:dplyr&#39;: ## ## combine library(ggtreeExtra) ## ggtreeExtra v1.12.0 For help: https://yulab-smu.top/treedata-book/ ## ## If you use the ggtree package suite in published research, please cite the appropriate paper(s): ## ## S Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L Zhan, T Wu, E Hu, Y Jiang, X Bo, G Yu. ggtreeExtra: Compact ## visualization of richly annotated phylogenetic data. Molecular Biology and Evolution. 2021, 38(9):4039-4042. doi: ## 10.1093/molbev/msab166 library(ggtree) ## ggtree v3.10.1 For help: https://yulab-smu.top/treedata-book/ ## ## If you use the ggtree package suite in published research, please cite the appropriate paper(s): ## ## Guangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam. ggtree: an R package for visualization and annotation of ## phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. 2017, 8(1):28-36. ## doi:10.1111/2041-210X.12628 ## ## G Yu. Data Integration, Manipulation and Visualization of Phylogenetic Trees (1st ed.). Chapman and Hall/CRC. 2022. ISBN: ## 9781032233574 ## ## Guangchuang Yu. Data Integration, Manipulation and Visualization of Phylogenetic Trees (1st edition). Chapman and Hall/CRC. 2022, ## doi:10.1201/9781003279242 ## ## Attache Paket: &#39;ggtree&#39; ## ## Das folgende Objekt ist maskiert &#39;package:ggpubr&#39;: ## ## rotate ## ## Das folgende Objekt ist maskiert &#39;package:ape&#39;: ## ## rotate ## ## Das folgende Objekt ist maskiert &#39;package:tidyr&#39;: ## ## expand library(ggh4x) ## Warning: Paket &#39;ggh4x&#39; wurde unter R Version 4.3.3 erstellt library(GGally) ## Warning: Paket &#39;GGally&#39; wurde unter R Version 4.3.3 erstellt ## Registered S3 method overwritten by &#39;GGally&#39;: ## method from ## +.gg ggplot2 ## ## Attache Paket: &#39;GGally&#39; ## ## Das folgende Objekt ist maskiert &#39;package:R.utils&#39;: ## ## wrap # For statistics library(spaa) ## Warning: Paket &#39;spaa&#39; wurde unter R Version 4.3.3 erstellt library(vegan) ## Warning: Paket &#39;vegan&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: permute ## ## Attache Paket: &#39;permute&#39; ## ## Das folgende Objekt ist maskiert &#39;package:devtools&#39;: ## ## check ## ## Das folgende Objekt ist maskiert &#39;package:R.oo&#39;: ## ## check ## ## Lade nötiges Paket: lattice ## Warning: Paket &#39;lattice&#39; wurde unter R Version 4.3.3 erstellt ## This is vegan 2.6-8 ## ## Attache Paket: &#39;vegan&#39; ## ## Das folgende Objekt ist maskiert &#39;package:phytools&#39;: ## ## scores library(Rtsne) ## Warning: Paket &#39;Rtsne&#39; wurde unter R Version 4.3.3 erstellt library(geiger) ## Warning: Paket &#39;geiger&#39; wurde unter R Version 4.3.3 erstellt library(hilldiv2) library(distillR) ## ## Attache Paket: &#39;distillR&#39; ## ## Das folgende Objekt ist maskiert durch &#39;.GlobalEnv&#39;: ## ## genome_counts ## ## Das folgende Objekt ist maskiert &#39;package:ggpubr&#39;: ## ## gene_expression library(broom.mixed) ## Warning: Paket &#39;broom.mixed&#39; wurde unter R Version 4.3.3 erstellt library(emmeans) ## Warning: Paket &#39;emmeans&#39; wurde unter R Version 4.3.3 erstellt ## Welcome to emmeans. ## Caution: You lose important information if you filter this package&#39;s results. ## See &#39;? untidy&#39; ## ## Attache Paket: &#39;emmeans&#39; ## ## Das folgende Objekt ist maskiert &#39;package:GGally&#39;: ## ## pigs ## ## Das folgende Objekt ist maskiert &#39;package:devtools&#39;: ## ## test library(vegan) #library(lmerTest) library(Hmsc) ## Warning: Paket &#39;Hmsc&#39; wurde unter R Version 4.3.3 erstellt ## Lade nötiges Paket: coda ## Warning: Paket &#39;coda&#39; wurde unter R Version 4.3.3 erstellt ## Warning in .recacheSubclasses(def@className, def, env): Nicht definierte Subklasse &quot;ndiMatrix&quot; von Klasse &quot;replValueSp&quot;; Definition nicht ## aktualisiert library(corrplot) ## Warning: Paket &#39;corrplot&#39; wurde unter R Version 4.3.3 erstellt ## corrplot 0.95 loaded library(lme4) ## Lade nötiges Paket: Matrix ## ## Attache Paket: &#39;Matrix&#39; ## ## Das folgende Objekt ist maskiert &#39;package:ggtree&#39;: ## ## expand ## ## Die folgenden Objekte sind maskiert von &#39;package:tidyr&#39;: ## ## expand, pack, unpack library(nlme) ## Warning: Paket &#39;nlme&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;nlme&#39; ## ## Das folgende Objekt ist maskiert &#39;package:lme4&#39;: ## ## lmList ## ## Das folgende Objekt ist maskiert &#39;package:ggtree&#39;: ## ## collapse ## ## Das folgende Objekt ist maskiert &#39;package:dplyr&#39;: ## ## collapse library(ANCOMBC) #map visualtisation library(rnaturalearth) ## Warning: Paket &#39;rnaturalearth&#39; wurde unter R Version 4.3.3 erstellt library(rnaturalearthdata) ## Warning: Paket &#39;rnaturalearthdata&#39; wurde unter R Version 4.3.3 erstellt ## ## Attache Paket: &#39;rnaturalearthdata&#39; ## ## Das folgende Objekt ist maskiert &#39;package:rnaturalearth&#39;: ## ## countries110 library(patchwork) ## Warning: Paket &#39;patchwork&#39; wurde unter R Version 4.3.3 erstellt "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 load_read_counts 2.3 load_genome_metadata 2.4 Genome base hits 2.5 Genome tree 2.6 Genome annotations 2.7 Filter reads by coverage 2.8 Transform reads into genome counts 2.9 Prepare color scheme 2.10 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/merged_metadata.tsv&quot;) %&gt;% rename(sample=1) 2.2 load_read_counts read_counts &lt;- read_tsv(&quot;data/DMB0167_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) # Select specific columns from the data 2.3 load_genome_metadata genome_metadata &lt;- read_tsv(&quot;data/DMB0167_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0167_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% # Select specific columns from the data semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0167.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.6 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.7 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% # Add or modify columns in the dataset mutate(across(-1, ~ . * read_counts[[cur_column()]])) # Add or modify columns in the dataset 2.8 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Add or modify columns in the dataset readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) # Add or modify columns in the dataset 2.8.1 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.9 Prepare color scheme phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.10 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Filter Data 3.2 Load Map 3.3 Plot Possum Locations 3.4 Load Map 3.5 Plot Possum Locations 3.6 Sequencing reads statistics 3.7 DNA fractions 3.8 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) #Visualisation of geographical location of samples and their respectiv envirotypes 3.1 Filter Data # Define extended boundary to include all possum data points lat_min &lt;- -45.0 # Slightly smaller than -42.93 lat_max &lt;- -28.0 # Slightly larger than -30.65 lon_min &lt;- 110.0 # Slightly smaller than 116.47 lon_max &lt;- 150.0 # Slightly larger than 148.28 # Full dataset with all points (Tasmania &amp; Australia border) full_possums &lt;- sample_metadata %&gt;% filter(latitude &gt;= lat_min &amp; latitude &lt;= lat_max, longitude &gt;= lon_min &amp; longitude &lt;= lon_max) # Filter for Tasmania only tasmania_possums &lt;- full_possums %&gt;% filter(latitude &lt; -38 &amp; latitude &gt; -45, # Tasmania lat range longitude &gt; 140 &amp; longitude &lt; 150) # Tasmania lon range # Aggregate possum count per location full_possums_count &lt;- full_possums %&gt;% group_by(latitude, longitude, broad_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) tasmania_possums_count &lt;- tasmania_possums %&gt;% group_by(latitude, longitude, broad_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) 3.2 Load Map # Load world map australia_map &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) %&gt;% filter(admin == &quot;Australia&quot;) 3.3 Plot Possum Locations # Get Tasmania data range to set zoom lat_range &lt;- range(tasmania_possums$latitude, na.rm = TRUE) lon_range &lt;- range(tasmania_possums$longitude, na.rm = TRUE) # Count total possums total_full &lt;- sum(full_possums_count$count) total_tasmania &lt;- sum(tasmania_possums_count$count) # Plot 1: Full Dataset (Including Border Data) map_plot_full &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + # Base map geom_point(data = full_possums_count, aes(x = longitude, y = latitude, color = broad_environment, size = count), alpha = 0.8) + theme_minimal() + labs(title = paste(&quot;PD - Full Dataset (&quot;, total_full, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;, color = &quot;Environment Type&quot;, size = &quot;Count&quot;, shape = &quot;species&quot;) + theme(legend.position = &quot;none&quot;, plot.title = element_text(size = 14, face = &quot;bold&quot;)) # Plot 2: Zoomed-in Tasmania (with entire landmass and cleaned longitude labels) map_plot_zoomed &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + # Base map geom_point(data = tasmania_possums_count, aes(x = longitude, y = latitude, color = broad_environment, size = count), alpha = 0.8) + coord_sf(xlim = c(143, 149), ylim = c(-44, -39)) + # Full Tasmania view theme_minimal() + labs(title = paste(&quot;PD - Tasmania (&quot;, total_tasmania, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;, color = &quot;Environment Type&quot;, size = &quot;Count&quot;, shape = &quot;species&quot; ) + theme(legend.position = &quot;right&quot;, axis.text.x = element_text(angle = 0, hjust = 0.5), plot.title = element_text(size = 14, face = &quot;bold&quot;)) # Combine the plots side by side with shared legend and increased size (map_plot_full + map_plot_zoomed) + plot_layout(guides = &quot;collect&quot;, widths = c(1, 1.2)) # Define extended boundary to include all possum data points lat_min &lt;- -45.0 # Slightly smaller than -42.93 lat_max &lt;- -28.0 # Slightly larger than -30.65 lon_min &lt;- 110.0 # Slightly smaller than 116.47 lon_max &lt;- 150.0 # Slightly larger than 148.28 # Full dataset with all points (Tasmania &amp; Australia border) full_possums &lt;- sample_metadata %&gt;% filter(latitude &gt;= lat_min &amp; latitude &lt;= lat_max, longitude &gt;= lon_min &amp; longitude &lt;= lon_max) # Filter for Tasmania only tasmania_possums &lt;- full_possums %&gt;% filter(latitude &lt; -38 &amp; latitude &gt; -45, # Tasmania lat range longitude &gt; 140 &amp; longitude &lt; 150) # Tasmania lon range # Aggregate possum count per location full_possums_count &lt;- full_possums %&gt;% group_by(latitude, longitude, local_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) tasmania_possums_count &lt;- tasmania_possums %&gt;% group_by(latitude, longitude, local_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) 3.4 Load Map # Load world map australia_map &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) %&gt;% filter(admin == &quot;Australia&quot;) 3.5 Plot Possum Locations library(RColorBrewer) # Get Tasmania data range to set zoom lat_range &lt;- range(tasmania_possums$latitude, na.rm = TRUE) lon_range &lt;- range(tasmania_possums$longitude, na.rm = TRUE) # Count total possums total_full &lt;- sum(full_possums_count$count) total_tasmania &lt;- sum(tasmania_possums_count$count) # Plot 1: Full Dataset (Including Border Data) map_plot_full &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + geom_point(data = full_possums_count, aes(x = longitude, y = latitude, color = local_environment, size = count), alpha = 0.8) + scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + labs(title = paste(&quot;PD - Full Dataset (&quot;, total_full, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), legend.position = &quot;none&quot; ) # Plot 2: Zoomed-in Tasmania map_plot_zoomed &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + geom_point(data = tasmania_possums_count, aes(x = longitude, y = latitude, color = local_environment, size = count), alpha = 0.8) + coord_sf(xlim = c(143, 149), ylim = c(-44, -39)) + scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + labs(title = paste(&quot;PD - Tasmania (&quot;, total_tasmania, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), axis.text.x = element_text(angle = 0, hjust = 0.5), legend.position = &quot;none&quot; ) # Combine the plots side by side (map_plot_full + map_plot_zoomed) + plot_layout(widths = c(1, 1.2)) # Step 1: Create simplified/aggregated legend data legend_data &lt;- tasmania_possums_count %&gt;% group_by(local_environment) %&gt;% summarise(mean_count = mean(count, na.rm = TRUE)) %&gt;% filter(!is.na(local_environment)) %&gt;% arrange(desc(mean_count)) %&gt;% mutate(env_label = paste0(local_environment)) # Step 2: Plot custom &quot;legend&quot; with clean layout custom_legend_plot &lt;- ggplot(legend_data, aes(x = 1, y = reorder(env_label, mean_count), color = env_label, size = mean_count)) + geom_point(show.legend = FALSE) + scale_size_continuous(range = c(3, 6)) + # tweak dot size scaling scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + theme( axis.title = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.margin = margin(10, 30, 10, 10), axis.text.y = element_text(size = 9, hjust = 0) ) # Show it custom_legend_plot 3.6 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_j46cmbo22lpe00y16jxa, .table th.tinytable_css_j46cmbo22lpe00y16jxa { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7wy7219q4r9euyvl00ng, .table th.tinytable_css_7wy7219q4r9euyvl00ng { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Total Average 354.78 4.86 ± 1.43 3.7 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_nupzl4r0vsf4qhc8hr0d, .table th.tinytable_css_nupzl4r0vsf4qhc8hr0d { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5hp7n6r9dssohxt2s8cq, .table th.tinytable_css_5hp7n6r9dssohxt2s8cq { border-bottom: solid #d3d8dc 0.1em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01248 0.35511316 0.004968189 2.3488847 8.70559471 EHI01253 0.15065275 0.007306842 0.7958509 3.15690325 EHI01254 0.17713763 0.008641986 0.7698065 3.46426201 EHI01256 0.25601713 0.011186636 1.6153318 4.62283158 EHI01257 0.44278829 0.028219625 1.6424801 6.37891199 EHI01258 0.18025206 0.021893733 0.9061351 3.11043101 EHI01259 0.15785294 0.002551853 1.1230441 3.63491878 EHI01264 0.10980388 0.194713827 0.8459937 1.94399131 EHI01265 0.20096759 0.027838593 0.8781951 4.42282487 EHI01266 0.16495605 0.004145198 1.0104139 3.02528367 EHI01268 0.11654687 0.043538943 0.4199424 2.18818215 EHI01270 0.15490780 0.006255568 0.7491831 1.85948097 EHI01271 0.08546883 0.008773597 0.5176363 1.98955149 EHI01272 0.12521297 0.004006385 0.6499615 2.73090343 EHI01273 0.18374616 0.099650655 1.1683174 3.70517179 EHI01339 0.21133261 0.082072269 1.0958456 4.01574329 EHI01340 0.32934907 0.078517930 2.2365738 0.01091408 EHI01341 0.26571726 0.023522716 1.3209604 3.21859599 EHI01342 0.21296031 0.114741396 1.6557153 3.12134276 EHI01343 0.18906343 0.112255644 1.1418032 3.97856774 EHI01345 0.20874962 0.177845762 1.5032861 3.47998475 EHI01387 0.23576644 4.644537522 0.4353141 1.57377576 EHI01389 0.22833259 0.150555697 1.5157673 4.06490864 EHI02064 0.36180367 0.073958684 1.7560470 3.13915797 EHI02074 0.17452029 0.007193557 0.5946409 1.57287231 EHI02082 0.39485375 0.094697133 1.6620324 4.43909934 EHI02098 0.52162812 0.139932802 1.6241102 3.79457081 EHI02760 0.27278081 0.117175084 0.5856983 2.76896198 EHI02766 0.34206992 0.026262224 1.0131013 3.38893828 EHI02767 0.39776392 0.027589923 1.4920663 4.50953237 EHI02768 0.37285123 0.057921344 0.6534089 2.85662184 EHI02769 0.23901114 0.015625837 0.5237186 1.80651100 EHI02770 0.26006960 0.015636651 0.8099749 2.58298046 EHI02771 0.43362442 0.078674560 0.8927819 3.75367475 EHI02772 0.39350819 0.133333189 0.9955418 3.97147448 EHI02773 0.47175703 0.004630464 1.2818831 4.30891829 EHI02774 0.35219413 0.031638370 0.9683903 3.44730645 EHI02775 0.31535990 0.006253892 1.2347646 3.06181082 EHI02776 0.28106302 0.008270565 0.8075659 3.52331025 EHI02779 0.34735466 0.029550201 0.7625330 2.52847910 EHI02780 0.33353488 0.041239947 1.1610012 3.29078029 EHI02784 0.31121206 0.019685481 0.8413476 3.58321420 EHI02785 0.32741021 0.014638539 0.9515597 3.36888357 EHI02789 0.42120190 0.170396074 1.0281381 4.40650732 EHI02792 0.36123108 0.015462248 1.3463286 3.76356741 EHI02796 1.07935523 0.004050961 1.0416445 4.15780523 EHI02797 0.41305976 0.086506413 0.8415216 3.53097613 EHI02801 0.52781243 0.036344570 0.8388848 2.91079981 EHI02804 0.42394759 0.159371043 1.0649697 4.43245152 EHI02806 0.44246621 0.089581175 1.7887921 4.03903963 EHI02811 0.29358681 0.013750538 1.1729986 3.28550574 EHI02812 0.36744061 0.057112125 0.8678336 4.12914616 EHI02817 0.34058911 0.023035237 0.8059566 2.90095167 EHI02819 0.23782849 0.002853452 2.0747359 1.56371986 EHI02822 0.32932578 0.266269016 0.8566608 2.91142265 EHI02823 0.46831299 0.319368041 0.9890243 4.23615481 EHI02824 0.92746482 0.011070271 0.9754646 2.92498444 EHI02826 0.44208850 0.043681080 0.9461530 4.12595664 EHI02829 0.61719061 0.020333202 1.0838773 5.08522117 EHI02830 0.63356691 1.608315016 0.8548023 3.32875927 EHI02831 0.48579678 0.249927066 1.0747457 3.71679223 EHI02832 0.55980508 0.002363983 1.1179965 3.46662093 EHI02835 0.36642675 0.046904442 1.3031776 4.02345778 EHI02836 0.73282342 0.011061548 0.7145331 2.22777765 EHI02837 0.63165003 0.233233891 1.2696173 4.08635940 EHI02838 0.71576136 0.008130997 1.6067697 4.58593636 EHI02839 0.53704346 0.005429642 1.1846421 5.22051908 EHI02840 0.40520960 0.170732154 0.9714674 4.15870634 EHI02841 0.54078237 0.066720106 1.3402000 4.38657015 EHI02843 0.51124373 0.025768852 1.0209520 3.79170293 EHI02844 0.33724044 0.257831962 1.1673368 2.84963063 EHI02845 0.41473841 0.000195490 0.5934703 2.25767567 EHI02846 0.43528710 0.009803089 0.4380401 2.07829540 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() ## Warning: There was 1 warning in `summarise()`. ## ℹ In argument: `across(where(is.numeric), mean, na.rm = TRUE)`. ## Caused by warning: ## ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0. ## Supply arguments directly to `.fns` through an anonymous function instead. ## ## # Previously ## across(a:b, mean, na.rm = TRUE) ## ## # Now ## across(a:b, \\(x) mean(x, na.rm = TRUE)) .table td.tinytable_css_ooa99mhjvaltk6qf4ftt, .table th.tinytable_css_ooa99mhjvaltk6qf4ftt { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_j64edxdfi1a2pwxre5lt, .table th.tinytable_css_j64edxdfi1a2pwxre5lt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.3650321 0.1481815 1.08684 3.461414 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.8 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Gut microbiota", " Chapter 4 MAG catalogue 4.1 Gut microbiota load(&quot;data/data.Rdata&quot;) 4.1.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) ## *************************************************************** ## * Note: * ## * force.ultrametric does not include a formal method to * ## * ultrametricize a tree &amp; should only be used to coerce * ## * a phylogeny that fails is.ultrametric due to rounding -- * ## * not as a substitute for formal rate-smoothing methods. * ## *************************************************************** # Add phylum ring # circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + # scale_fill_manual(values=phylum_colors) + # geom_tiplab2(size=1, hjust=-0.1) + # theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.24, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;)+ labs(fill=&quot;Contamination&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#74C8AE&quot;))+ labs(fill=&quot;New species&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- circular_tree + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), fill = &quot;#1e6e55&quot;, offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.1, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.7, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.1, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.1.2 Taxonomy overview tax_mag &lt;-genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) tax_mag %&gt;% mutate(percetage_mag=round(mag_n*100/sum(mag_n), 2)) %&gt;% arrange(-percetage_mag) %&gt;% tt() .table td.tinytable_css_qcujvukdfenct9i46jiz, .table th.tinytable_css_qcujvukdfenct9i46jiz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1bdr4kicxntlu69c9c62, .table th.tinytable_css_1bdr4kicxntlu69c9c62 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum mag_n percetage_mag p__Bacillota_A 1440 79.25 p__Bacillota 94 5.17 p__Cyanobacteriota 82 4.51 p__Bacteroidota 71 3.91 p__Pseudomonadota 34 1.87 p__Actinomycetota 25 1.38 p__Synergistota 17 0.94 p__Campylobacterota 15 0.83 p__Thermoplasmatota 12 0.66 p__Desulfobacterota 8 0.44 p__Bacillota_C 7 0.39 p__Verrucomicrobiota 6 0.33 p__Spirochaetota 4 0.22 p__Bacillota_B 1 0.06 p__Methanobacteriota 1 0.06 4.1.3 Mag size (MB) genome_metadata &lt;-genome_metadata %&gt;% mutate(corrected_size=100*length/completeness) %&gt;% arrange(completeness) Mags average size (MB) genome_metadata %&gt;% summarise(Average_corrected_size=mean(corrected_size)) ## # A tibble: 1 × 1 ## Average_corrected_size ## &lt;dbl&gt; ## 1 2305214. 4.1.4 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_dnqdzvauwqjlfqqfzyo6, .table th.tinytable_css_dnqdzvauwqjlfqqfzyo6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7rau1u6rjrxl7difm3e8, .table th.tinytable_css_7rau1u6rjrxl7difm3e8 { border-bottom: solid #d3d8dc 0.1em; } Completeness Contamination 79.4 ± 16.77 2.79 ± 2.58 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.1.5 Functional overview Predicted genes genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) # Predicted genes pred_genes &lt;- genome_annotations %&gt;% nrow() cat(pred_genes) ## 1736968 Number of annotated genes and percentages # Some annotation genome_annota &lt;- genome_annotations %&gt;% filter(if_any(c(kegg_id, pfam_hits, cazy_hits), ~ !is.na(.))) %&gt;% nrow() cat(genome_annota) # Some annotation percentage genome_annota*100/pred_genes Number of KEGG annotatated genes and percentages # KEGG annotation kegg_annota &lt;- genome_annotations %&gt;% filter(!is.na(kegg_id)) %&gt;% nrow() cat(kegg_annota) # KEGG annotation percentage kegg_annota*100/genome_annota # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) ## *************************************************************** ## * Note: * ## * force.ultrametric does not include a formal method to * ## * ultrametricize a tree &amp; should only be used to coerce * ## * a phylogeny that fails is.ultrametric due to rounding -- * ## * not as a substitute for formal rate-smoothing methods. * ## *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.1.6 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["taxonomic-composition.html", "Chapter 5 Taxonomic composition 5.1 Gut microbiota", " Chapter 5 Taxonomic composition 5.1 Gut microbiota load(&quot;data/data.Rdata&quot;) 5.1.1 Taxonomy overview 5.1.1.1 Phylum level genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;white&quot;), strip.text = element_text(size = 12, lineheight = 0.6,face=&quot;bold&quot;), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of MAGs 1817 Number of bacteria phyla 13 Number of Archaea phyla 2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,broad_environment, sex) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE) ) %&gt;% mutate(Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum, Total) ## # A tibble: 15 × 2 ## phylum Total ## &lt;chr&gt; &lt;chr&gt; ## 1 p__Bacillota_A 60.713±17.816 ## 2 p__Bacteroidota 15.337±12.756 ## 3 p__Bacillota 10.651±15.13 ## 4 p__Synergistota 2.856±1.778 ## 5 p__Cyanobacteriota 2.624±3.286 ## 6 p__Verrucomicrobiota 2.074±1.467 ## 7 p__Pseudomonadota 1.207±2.219 ## 8 p__Bacillota_C 1.133±0.683 ## 9 p__Thermoplasmatota 0.868±1.487 ## 10 p__Campylobacterota 0.866±1.568 ## 11 p__Actinomycetota 0.749±1.478 ## 12 p__Desulfobacterota 0.681±0.697 ## 13 p__Spirochaetota 0.189±0.607 ## 14 p__Methanobacteriota 0.03±0.061 ## 15 p__Bacillota_B 0.02±0.043 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Bacteria phyla in individuals from females 12 13 Bacteria phyla in individuals from Temperate woodland 13 Bacteria phyla in individuals from Xeric shrubland 13 Bacteria phyla in individuals from mixed_forest 11 Bacteria phyla in individuals from cropland 12 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), er_mean = mean(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), er_sd = sd(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), go_mean = mean(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE), go_sd = sd(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Cropland = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Mixed_forest = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)), Xeric_shrubland = str_c(round(er_mean, 3), &quot;±&quot;, round(er_sd, 3)), Temperate_woodland = str_c(round(go_mean, 3), &quot;±&quot;, round(go_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(phylum, Total, Cropland, Temperate_woodland, Mixed_forest, Xeric_shrubland) ## # A tibble: 15 × 6 ## phylum Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 p__Bacillota_A 60.713±17.816 58.875±10.43 63.149±17.119 34.394±18.002 57.552±18.161 ## 2 p__Bacteroidota 15.337±12.756 15.481±9.835 14.668±12.774 10.876±11.507 26.428±17.109 ## 3 p__Bacillota 10.651±15.13 14.427±14.322 8.561±12.074 38.211±25.419 2.336±1.65 ## 4 p__Synergistota 2.856±1.778 2.215±1.373 2.877±1.824 4.395±1.665 3.122±2.054 ## 5 p__Cyanobacteriota 2.624±3.286 2.238±2.31 2.907±3.671 3.894±2.743 0.326±0.377 ## 6 p__Verrucomicrobiota 2.074±1.467 1.534±0.894 1.998±1.116 4.934±2.723 2.134±0.872 ## 7 p__Pseudomonadota 1.207±2.219 0.769±0.588 1.405±2.689 0.769±0.157 0.558±0.257 ## 8 p__Bacillota_C 1.133±0.683 1.154±0.58 1.138±0.762 1.145±0.526 0.894±0.286 ## 9 p__Thermoplasmatota 0.868±1.487 1.874±2.445 0.475±1.01 0.209±0.204 2.817±0.979 ## 10 p__Campylobacterota 0.866±1.568 0.776±0.657 0.746±1.234 0.611±0.499 2.261±4.129 ## 11 p__Actinomycetota 0.749±1.478 0.108±0.227 1.036±1.75 0.286±0.281 0.278±0.522 ## 12 p__Desulfobacterota 0.681±0.697 0.483±0.586 0.773±0.768 0.275±0.289 0.653±0.615 ## 13 p__Spirochaetota 0.189±0.607 0±0 0.211±0.697 0±0 0.62±0.635 ## 14 p__Methanobacteriota 0.03±0.061 0.036±0.046 0.037±0.071 0±0 0±0 ## 15 p__Bacillota_B 0.02±0.043 0.032±0.045 0.017±0.045 0±0 0.022±0.028 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(phylum, Total, Female, Male) ## # A tibble: 15 × 4 ## phylum Total Female Male ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 p__Bacillota_A 60.713±17.816 59.012±21.422 63.183±14.871 ## 2 p__Bacteroidota 15.337±12.756 14.648±11.721 13.48±11.248 ## 3 p__Bacillota 10.651±15.13 12.942±17.914 10.184±13.886 ## 4 p__Synergistota 2.856±1.778 2.967±1.775 2.65±1.655 ## 5 p__Cyanobacteriota 2.624±3.286 2.659±3.026 2.965±3.089 ## 6 p__Verrucomicrobiota 2.074±1.467 2.067±1.288 2.274±1.798 ## 7 p__Pseudomonadota 1.207±2.219 1.234±1.949 0.951±0.784 ## 8 p__Bacillota_C 1.133±0.683 1.37±0.897 1.025±0.503 ## 9 p__Thermoplasmatota 0.868±1.487 0.766±1.708 0.723±1.287 ## 10 p__Campylobacterota 0.866±1.568 0.53±0.754 0.991±1.341 ## 11 p__Actinomycetota 0.749±1.478 1.128±2.008 0.609±1.113 ## 12 p__Desulfobacterota 0.681±0.697 0.615±0.587 0.652±0.486 ## 13 p__Spirochaetota 0.189±0.607 0±0 0.277±0.83 ## 14 p__Methanobacteriota 0.03±0.061 0.044±0.069 0.013±0.025 ## 15 p__Bacillota_B 0.02±0.043 0.018±0.041 0.023±0.05 5.1.1.2 Family level Percentange of families in each group of environment family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, broad_environment, sex) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), er_mean = mean(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), er_sd = sd(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), go_mean = mean(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE), go_sd = sd(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Cropland = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Mixed_forest = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)), Xeric_shrubland = str_c(round(er_mean, 3), &quot;±&quot;, round(er_sd, 3)), Temperate_woodland = str_c(round(go_mean, 3), &quot;±&quot;, round(go_sd, 3)) ) %&gt;% dplyr::select(family,Total,Cropland, Temperate_woodland, Mixed_forest, Xeric_shrubland) ## # A tibble: 52 × 6 ## family Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 f__ 0.022±0.064 0.002±0.008 0.033±0.077 0.006±0.014 0±0 ## 2 f__Acidaminococcaceae 1.116±0.658 1.154±0.58 1.112±0.727 1.145±0.526 0.894±0.286 ## 3 f__Acutalibacteraceae 0.437±0.449 0.308±0.215 0.501±0.512 0.204±0.372 0.449±0.299 ## 4 f__Akkermansiaceae 1.932±1.499 1.534±0.894 1.887±1.118 4.934±2.723 1.301±1.184 ## 5 f__Anaerotignaceae 0.044±0.043 0.044±0.041 0.042±0.041 0.005±0.011 0.074±0.067 ## 6 f__Anaerovoracaceae 0.022±0.05 0.009±0.02 0.02±0.042 0.112±0.11 0±0 ## 7 f__Bacteroidaceae 10.696±11.055 9.816±5.594 9.817±11.399 9.473±10.239 22.416±13.948 ## 8 f__Borkfalkiaceae 7.439±5.295 11.275±5.806 7.088±5.26 3.208±2.553 5.841±3.717 ## 9 f__Burkholderiaceae 0.052±0.102 0.039±0.059 0.042±0.095 0.038±0.056 0.174±0.184 ## 10 f__Burkholderiaceae_A 0.577±0.56 0.523±0.471 0.58±0.637 0.699±0.226 0.383±0.242 ## # ℹ 42 more rows family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~broad_environment)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), le_sd=sd(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), ha_mean=mean(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), ha_sd=sd(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), er_mean=mean(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), er_sd=sd(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), go_mean=mean(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T), go_sd=sd(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Cropland=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Mixed_forest=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Xeric_shrubland=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Temperate_woodland=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Cropland,Temperate_woodland, Mixed_forest,Xeric_shrubland) ## # A tibble: 52 × 6 ## family Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 f__Lachnospiraceae 28.205±9.998 25.865±6.414 29.657±10.487 22.929±12.444 22.276±6.399 ## 2 f__Oscillospiraceae 11.223±8.158 6.852±2.912 12.307±8.693 4.256±3.422 17.81±7.479 ## 3 f__Bacteroidaceae 10.696±11.055 9.816±5.594 9.817±11.399 9.473±10.239 22.416±13.948 ## 4 f__CAG-288 8.635±15.251 11.701±14.385 6.449±11.978 37.695±25.73 0.245±0.538 ## 5 f__Borkfalkiaceae 7.439±5.295 11.275±5.806 7.088±5.26 3.208±2.553 5.841±3.717 ## 6 f__Ruminococcaceae 5.429±4.762 6.017±5.302 5.389±4.49 1.722±1.147 3.322±2.259 ## 7 f__CAG-508 4.042±4.359 4.664±4.633 4.107±4.212 0.146±0.267 3.826±3.273 ## 8 f__Dethiosulfovibrionaceae 2.454±1.626 2.049±1.294 2.405±1.661 3.993±1.662 2.626±1.872 ## 9 f__Muribaculaceae 2.053±4.249 2.813±5.308 2.341±4.499 0.386±0.863 0±0 ## 10 f__UBA932 1.966±3.772 2.294±3.61 1.763±3.655 0.915±2.046 3.7±6.208 ## # ℹ 42 more rows Family summary grouped by sex family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(family, Total, Female, Male) ## # A tibble: 52 × 4 ## family Total Female Male ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 f__Lachnospiraceae 28.205±9.998 29.818±13.448 28.926±7.093 ## 2 f__Oscillospiraceae 11.223±8.158 8.451±7.695 11.752±6.237 ## 3 f__Bacteroidaceae 10.696±11.055 9.231±9.11 9.336±9.589 ## 4 f__CAG-288 8.635±15.251 11.469±18.156 7.94±13.683 ## 5 f__Borkfalkiaceae 7.439±5.295 7.529±6.085 7.343±4.351 ## 6 f__Ruminococcaceae 5.429±4.762 5.14±3.989 6.359±5.72 ## 7 f__CAG-508 4.042±4.359 3.495±4.278 4.605±4.655 ## 8 f__Dethiosulfovibrionaceae 2.454±1.626 2.599±1.648 2.294±1.494 ## 9 f__Muribaculaceae 2.053±4.249 2.968±5.555 1.326±2.19 ## 10 f__UBA932 1.966±3.772 1.695±3.403 2.367±3.922 ## # ℹ 42 more rows family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~sex)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Female, Male) ## # A tibble: 52 × 4 ## family Total Female Male ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 f__Lachnospiraceae 28.205±9.998 29.818±13.448 28.926±7.093 ## 2 f__Oscillospiraceae 11.223±8.158 8.451±7.695 11.752±6.237 ## 3 f__Bacteroidaceae 10.696±11.055 9.231±9.11 9.336±9.589 ## 4 f__CAG-288 8.635±15.251 11.469±18.156 7.94±13.683 ## 5 f__Borkfalkiaceae 7.439±5.295 7.529±6.085 7.343±4.351 ## 6 f__Ruminococcaceae 5.429±4.762 5.14±3.989 6.359±5.72 ## 7 f__CAG-508 4.042±4.359 3.495±4.278 4.605±4.655 ## 8 f__Dethiosulfovibrionaceae 2.454±1.626 2.599±1.648 2.294±1.494 ## 9 f__Muribaculaceae 2.053±4.249 2.968±5.555 1.326±2.19 ## 10 f__UBA932 1.966±3.772 1.695±3.403 2.367±3.922 ## # ℹ 42 more rows 5.1.1.3 Genus level *** Percetange of genera in each group of environment*** genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus,broad_environment) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), le_sd=sd(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), ha_mean=mean(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), ha_sd=sd(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), er_mean=mean(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), er_sd=sd(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), go_mean=mean(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T), go_sd=sd(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Cropland=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Mixed_forest=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Xeric_shrubland=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Temperate_woodland=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total, Cropland,Temperate_woodland, Mixed_forest,Xeric_shrubland) ## # A tibble: 173 × 6 ## genus Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 g__Prevotella 9.081±10.534 9.381±5.844 8.141±10.756 4.235±6.183 21.397±13.482 ## 2 g__Enterosoma 8.635±15.251 11.701±14.385 6.449±11.978 37.695±25.73 0.245±0.538 ## 3 g__Coproplasma 6.807±5.002 10.681±5.315 6.328±4.94 3.196±2.54 5.313±3.765 ## 4 g__RGIG6307 5.319±4.84 4.127±2.083 5.707±5.151 0.477±0.289 6.745±2.756 ## 5 g__Onthomonas 4.353±3.228 3.628±2.036 4.237±3.041 2.906±2.533 7.746±5.474 ## 6 g__Ventrimonas 4.342±5.43 3.449±4.552 4.925±6.094 5.197±3.825 0.795±0.458 ## 7 g__Eubacterium_I 3.269±2.549 2.489±3.267 3.597±2.571 2.763±2.006 2.887±1.925 ## 8 g__Choladousia 2.622±1.668 2.029±0.97 2.638±1.7 1.956±1.192 2.869±1.766 ## 9 g__Faeciplasma 2.6±3.197 3.158±4.909 2.748±3.049 1.153±0.718 0.746±1.353 ## 10 g__Agathobacter 2.501±2.807 1.917±2.231 2.575±3.063 2.888±1.871 1.333±1.002 ## # ℹ 163 more rows genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~broad_environment)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) *** Percetange of genera in each group of sex*** genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus,sex) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[sex==&quot;Female&quot;]*100, na.rm=T), le_sd=sd(relabun[sex==&quot;Female&quot;]*100, na.rm=T), ha_mean=mean(relabun[sex==&quot;Male&quot;]*100, na.rm=T), ha_sd=sd(relabun[sex==&quot;Male&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Female=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Male=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,Male,Female) ## # A tibble: 173 × 4 ## genus Total Male Female ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 g__Prevotella 9.081±10.534 6.761±8.201 8.435±8.906 ## 2 g__Enterosoma 8.635±15.251 7.94±13.683 11.469±18.156 ## 3 g__Coproplasma 6.807±5.002 6.852±4.084 6.752±5.903 ## 4 g__RGIG6307 5.319±4.84 6.178±5.285 4.467±5.172 ## 5 g__Onthomonas 4.353±3.228 5.021±2.992 3.351±2.586 ## 6 g__Ventrimonas 4.342±5.43 3.935±3.668 6.022±7.312 ## 7 g__Eubacterium_I 3.269±2.549 3.336±1.804 3.328±2.91 ## 8 g__Choladousia 2.622±1.668 3.109±1.545 2.266±1.754 ## 9 g__Faeciplasma 2.6±3.197 3.338±3.991 2.463±2.538 ## 10 g__Agathobacter 2.501±2.807 2.548±1.862 2.905±3.867 ## # ℹ 163 more rows genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~sex)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Number of MAGs without genera-level annotation 84 .table td.tinytable_css_of6a94u6gy4b3nhpy1f8, .table th.tinytable_css_of6a94u6gy4b3nhpy1f8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_gxjs5pn1mkwpdslqd84q, .table th.tinytable_css_gxjs5pn1mkwpdslqd84q { border-bottom: solid #d3d8dc 0.1em; } phylum count_nogene count_total percentage p__Actinomycetota 5 25 20.000000 p__Bacillota 3 94 3.191489 p__Bacillota_A 71 1440 4.930556 p__Bacteroidota 1 71 1.408451 p__Cyanobacteriota 3 82 3.658537 p__Spirochaetota 1 4 25.000000 Percentage of MAGs without genus-level annotation 4.623005 Number of MAGs without species-level annotation # A tibble: 1 × 1 Mag_nospecies &lt;int&gt; 1 1547 .table td.tinytable_css_angbpru2s0iqyge7oeti, .table th.tinytable_css_angbpru2s0iqyge7oeti { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2wqousyxtvyvp05vrd6a, .table th.tinytable_css_2wqousyxtvyvp05vrd6a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum count_nospecies count_total species_annotated percentage percentage_species p__Actinomycetota 25 25 0 100.00000 0.000000 p__Bacillota 93 94 1 98.93617 1.063830 p__Bacillota_A 1211 1440 229 84.09722 15.902778 p__Bacillota_B 1 1 0 100.00000 0.000000 p__Bacillota_C 7 7 0 100.00000 0.000000 p__Bacteroidota 53 71 18 74.64789 25.352113 p__Campylobacterota 13 15 2 86.66667 13.333333 p__Cyanobacteriota 74 82 8 90.24390 9.756098 p__Desulfobacterota 8 8 0 100.00000 0.000000 p__Methanobacteriota 1 1 0 100.00000 0.000000 p__Pseudomonadota 24 34 10 70.58824 29.411765 p__Spirochaetota 4 4 0 100.00000 0.000000 p__Synergistota 17 17 0 100.00000 0.000000 p__Thermoplasmatota 11 12 1 91.66667 8.333333 p__Verrucomicrobiota 5 6 1 83.33333 16.666667 Percentage of MAGs without species-level annotation 85.14034 "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Gut microbiota", " Chapter 6 Alpha diversity 6.1 Gut microbiota load(&quot;data/data.Rdata&quot;) treatment_colors &lt;- c(&quot;#f56042&quot;,&quot;#429ef5&quot;, &quot;#42f58d&quot;, &quot;#b142f5&quot;) sample_metadata$broad_environment &lt;- factor(sample_metadata$broad_environment, levels=c(&quot;1000198 - Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot;, &quot;1000218 - Xeric shrubland&quot;, &quot;1000245 - Cropland&quot;)) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) .table td.tinytable_css_dl4rx6bkquawksa572tb, .table th.tinytable_css_dl4rx6bkquawksa572tb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3clwitmr480gz1pweb3v, .table th.tinytable_css_3clwitmr480gz1pweb3v { border-bottom: solid #d3d8dc 0.1em; } alpha Total Xeric_shrubland Temperate_woodland Cropland Mixed_forest richness 307.14±137.95 331.67±156.38 290.87±124.42 423.73±156.53 196.6±87.35 neutral 115.2±68.51 125.56±81.45 115.36±64.88 143.35±80.62 41.57±21.29 phylogenetic 7.35±1.43 7.66±1.29 7.17±1.38 8.68±0.97 6.41±1.48 functional 1.44±0.05 1.4±0.04 1.45±0.06 1.44±0.04 1.42±0.04 #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(300), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(190), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(12), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(2), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) 6.1.1 Mixed models alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) alpha_div_meta_clean &lt;- alpha_div_meta %&gt;% filter(!is.na(richness), !is.na(broad_environment), !is.na(sex)) alpha_dic_meta_filtered_out &lt;- anti_join(alpha_div_meta, alpha_div_meta_clean) Model_richness_random &lt;- lme(fixed = richness ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_richness_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 660.2575 670.0137 -325.1288 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 0.008756482 117.1185 Fixed effects: richness ~ broad_environment Value Std.Error DF t-value p-value (Intercept) 196.6000 52.37697 51 3.753558 0.0004 broad_environment1000221 - Temperate woodland 101.6326 55.33842 51 1.836564 0.0721 broad_environment1000245 - Cropland 227.6857 68.57756 51 3.320120 0.0017 Correlation: (Intr) b_1-Tw broad_environment1000221 - Temperate woodland -0.946 broad_environment1000245 - Cropland -0.764 0.723 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.7950418 -0.6850547 -0.1129844 0.5485118 2.9437495 Number of Observations: 55 Number of Groups: 2 Model_richness&lt;- lm(formula = richness ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_richness) Call: lm(formula = richness ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -198.26 -87.96 -12.64 60.05 334.36 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 205.55 54.20 3.793 0.000396 *** broad_environment1000221 - Temperate woodland 103.09 55.66 1.852 0.069778 . broad_environment1000245 - Cropland 234.72 69.66 3.369 0.001442 ** sexFemale -22.38 32.24 -0.694 0.490722 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 117.7 on 51 degrees of freedom Multiple R-squared: 0.1912, Adjusted R-squared: 0.1436 F-statistic: 4.018 on 3 and 51 DF, p-value: 0.01215 Model_richness_sex_random &lt;- lme(fixed = richness ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_richness_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 674.7345 682.6157 -333.3673 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 103.5142 117.8367 Fixed effects: richness ~ sex Value Std.Error DF t-value p-value (Intercept) 318.2455 66.28983 51 4.800820 0.0000 sexFemale -19.3594 32.20735 51 -0.601086 0.5504 Correlation: (Intr) sexFemale -0.256 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.6989576 -0.7600262 -0.1150659 0.5803378 2.8466596 Number of Observations: 55 Number of Groups: 3 emmeans(Model_richness_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Male 318 66.3 2 33.0 603 Female 299 65.9 2 15.4 582 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Male - Female 19.4 32.2 51 0.601 0.5504 Degrees-of-freedom method: containment Model_neutral_random &lt;- lme(fixed = neutral ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_neutral_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 591.136 600.8923 -290.568 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 3.155776 60.21234 Fixed effects: neutral ~ broad_environment Value Std.Error DF t-value p-value (Intercept) 41.45285 27.02351 51 1.533955 0.1312 broad_environment1000221 - Temperate woodland 78.47859 28.45168 51 2.758311 0.0080 broad_environment1000245 - Cropland 89.64625 35.28272 51 2.540797 0.0141 Correlation: (Intr) b_1-Tw broad_environment1000221 - Temperate woodland -0.943 broad_environment1000245 - Cropland -0.761 0.723 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.4967057 -0.6852481 -0.2208246 0.5080001 2.9856016 Number of Observations: 55 Number of Groups: 2 Model_neutral&lt;- lm(formula = neutral ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_neutral) Call: lm(formula = neutral ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -91.26 -41.01 -18.18 33.87 172.37 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 48.40 27.72 1.746 0.08685 . broad_environment1000221 - Temperate woodland 79.52 28.47 2.793 0.00734 ** broad_environment1000245 - Cropland 94.65 35.64 2.656 0.01053 * sexFemale -17.09 16.49 -1.036 0.30511 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 60.21 on 51 degrees of freedom Multiple R-squared: 0.1539, Adjusted R-squared: 0.1042 F-statistic: 3.093 on 3 and 51 DF, p-value: 0.03501 Model_neutral_sex_random &lt;- lme(fixed = neutral ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_neutral_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 602.9621 610.8433 -297.4811 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 42.01245 60.31076 Fixed effects: neutral ~ sex Value Std.Error DF t-value p-value (Intercept) 108.84953 28.27875 51 3.849164 0.0003 sexFemale -15.66423 16.46757 51 -0.951217 0.3460 Correlation: (Intr) sexFemale -0.306 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.4882909 -0.6737556 -0.3183183 0.6753650 2.8828753 Number of Observations: 55 Number of Groups: 3 emmeans(Model_neutral_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Male 108.8 28.3 2 -12.8 231 Female 93.2 28.0 2 -27.4 214 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Male - Female 15.7 16.5 51 0.951 0.3460 Degrees-of-freedom method: containment Model_phylogenetic&lt;- lm(formula = phylogenetic ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_phylogenetic) Call: lm(formula = phylogenetic ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -2.9295 -0.8603 -0.1014 0.9895 2.8013 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 6.6133 0.6269 10.549 2.02e-14 *** broad_environment1000221 - Temperate woodland 0.8873 0.6438 1.378 0.1741 broad_environment1000245 - Cropland 2.5411 0.8058 3.154 0.0027 ** sexFemale -0.5038 0.3730 -1.351 0.1827 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.362 on 51 degrees of freedom Multiple R-squared: 0.1932, Adjusted R-squared: 0.1457 F-statistic: 4.07 on 3 and 51 DF, p-value: 0.01146 Model_phylogenetic_sex_random &lt;- lme(fixed = phylogenetic ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) Model_phylogenetic_sex_random &lt;- lme(fixed = phylogenetic ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_phylogenetic_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 201.804 209.6852 -96.90202 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 1.12689 1.362951 Fixed effects: phylogenetic ~ sex Value Std.Error DF t-value p-value (Intercept) 7.746185 0.7299749 51 10.611578 0.0000 sexFemale -0.466249 0.3724362 51 -1.251891 0.2163 Correlation: (Intr) sexFemale -0.268 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.17047880 -0.65844821 -0.01077506 0.80316831 2.03418595 Number of Observations: 55 Number of Groups: 3 emmeans(Model_phylogenetic_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Male 7.75 0.730 2 4.61 10.9 Female 7.28 0.725 2 4.16 10.4 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Male - Female 0.466 0.372 51 1.252 0.2163 Degrees-of-freedom method: containment Model_functional_random &lt;- lme(fixed = functional ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_functional_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik -164.3919 -154.6357 87.19596 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 8.060387e-07 0.04216624 Fixed effects: functional ~ broad_environment Value Std.Error DF t-value p-value (Intercept) 1.4175017 0.01885731 51 75.16986 0.0000 broad_environment1000221 - Temperate woodland 0.0308941 0.01992353 51 1.55063 0.1272 broad_environment1000245 - Cropland 0.0210785 0.02469002 51 0.85373 0.3972 Correlation: (Intr) b_1-Tw broad_environment1000221 - Temperate woodland -0.946 broad_environment1000245 - Cropland -0.764 0.723 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.72328457 -0.57896261 0.05154102 0.50105852 4.27031463 Number of Observations: 55 Number of Groups: 2 Model_functional&lt;- lm(formula = functional ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_functional) Call: lm(formula = functional ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -0.071337 -0.024326 0.001019 0.021295 0.181390 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.418494 0.019596 72.388 &lt;2e-16 *** broad_environment1000221 - Temperate woodland 0.031056 0.020123 1.543 0.129 broad_environment1000245 - Cropland 0.021858 0.025188 0.868 0.390 sexFemale -0.002481 0.011658 -0.213 0.832 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.04256 on 51 degrees of freedom Multiple R-squared: 0.04766, Adjusted R-squared: -0.008358 F-statistic: 0.8508 on 3 and 51 DF, p-value: 0.4726 Model_functional_sex_random &lt;- lme(fixed = functional ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_functional_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik -169.1751 -161.294 88.58756 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 0.007340992 0.04252306 Fixed effects: functional ~ sex Value Std.Error DF t-value p-value (Intercept) 1.4429373 0.009805756 51 147.15207 0.0000 sexFemale -0.0022565 0.011506225 51 -0.19611 0.8453 Correlation: (Intr) sexFemale -0.593 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.06247086 -0.50517247 -0.03649002 0.50216238 4.32994583 Number of Observations: 55 Number of Groups: 3 emmeans(Model_functional_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Male 1.44 0.00981 2 1.4 1.49 Female 1.44 0.00974 2 1.4 1.48 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Male - Female 0.00226 0.0115 51 0.196 0.8453 Degrees-of-freedom method: containment "],["beta-diversity.html", "Chapter 7 Beta diversity 7.1 Gut microbiota", " Chapter 7 Beta diversity 7.1 Gut microbiota load(&quot;data/data.Rdata&quot;) treatment_colors &lt;- c(&quot;#f56042&quot;,&quot;#429ef5&quot;, &quot;#42f58d&quot;, &quot;#b142f5&quot;, &quot;#f5e642&quot;) sample_metadata_without_NA &lt;- sample_metadata %&gt;% filter(!is.na(broad_environment)) beta_div #Presence/Absence beta_q0n &lt;- genome_counts_filt %&gt;% f column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) #Abundance-sensitive beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) #Abundance + Phylogeny genome_counts_filt_beta &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) #Abundance + Trait Distance genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt_beta$genome) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) # 1. Only use genomes that also occur in genome_gifts valid_genomes &lt;- genome_counts_filt_beta$genome[genome_counts_filt_beta$genome %in% rownames(genome_gifts)] # 2. filter genome_gifts on these genomes genome_gifts1 &lt;- genome_gifts[valid_genomes, ] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] # 3. Calculate functional distance matrix dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) # 4. Determine genomes that exist in both genome_counts_filt_beta and dist common_genomes &lt;- intersect( genome_counts_filt_beta$genome, rownames(dist) ) # 5. genome_counts_filt to filter and sort the shared genomes genome_counts_filt_matched &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% filter(rownames(.) %in% common_genomes) %&gt;% select_if(~!all(. == 0)) # optional: leere Spalten raus # 6. Limit and sort dist matrix to common genomes dist_matched &lt;- dist[common_genomes, common_genomes] beta_q1f &lt;- genome_counts_filt_matched %&gt;% hillpair(q = 1, dist = dist_matched) 7.1.1 Permanova run_permanova &lt;- function(beta_matrix, metadata, sample_col = &quot;sample&quot;, group_col, group_vars, pairwise = FALSE) { # 1. Sample labels from Beta-Matrix sample_labels &lt;- labels(beta_matrix$S) # 2. Metadata filtered and sorted metadata_matched &lt;- metadata %&gt;% filter(!!sym(sample_col) %in% sample_labels) %&gt;% arrange(match(!!sym(sample_col), sample_labels)) # 3. Synchronize beta_matrix$S to metadata common_samples &lt;- intersect(sample_labels, metadata_matched[[sample_col]]) beta_matrix$S &lt;- beta_matrix$S[common_samples, common_samples] metadata_matched &lt;- metadata_matched %&gt;% filter(!!sym(sample_col) %in% common_samples) %&gt;% arrange(match(!!sym(sample_col), common_samples)) # 4. Remove samples with NA in group_col valid_idx &lt;- !is.na(metadata_matched[[group_col]]) beta_matrix$S &lt;- beta_matrix$S[valid_idx, valid_idx] metadata_matched &lt;- metadata_matched[valid_idx, ] # 5. Betadisper and Permutest cat(&quot;\\n===== Beta Dispersion Test =====\\n&quot;) dispersion_result &lt;- betadisper(beta_matrix$S, metadata_matched[[group_col]]) print(permutest(dispersion_result)) # 6. Dynamic formula building formula_str &lt;- paste0(&quot;beta_matrix$S ~ &quot;, paste(group_vars, collapse = &quot; + &quot;)) cat(&quot;\\n===== PERMANOVA Test (adonis2) =====\\n&quot;) permanova_result &lt;- adonis2(as.formula(formula_str), data = metadata_matched, permutations = 999, by = &quot;terms&quot;) print(broom::tidy(permanova_result)) # 7. (Optional) Pairwise Adonis if (pairwise) { cat(&quot;\\n===== Pairwise PERMANOVA =====\\n&quot;) print(pairwise.adonis(beta_matrix$S, metadata_matched[[group_col]], perm = 999)) } # 8. Return outputs return(list( dispersion = dispersion_result, permanova = permanova_result )) } "],["richness.html", "Chapter 8 Richness", " Chapter 8 Richness run_permanova( beta_matrix = beta_q0n$S, metadata = sample_metadata_without_NA, sample_col = &quot;sample&quot;, group_col = &quot;broad_environment&quot;, group_vars = c(&quot;broad_environment&quot;,&quot;sex&quot;, &quot;broad_environment:sex&quot;), pairwise = FALSE ) #Neutral diversity run_permanova( beta_matrix = beta_q1n, metadata = sample_metadata_without_NA, sample_col = &quot;sample&quot;, group_col = &quot;broad_environment&quot;, group_vars = c(&quot;broad_environment&quot;,&quot;sex&quot;, &quot;broad_environment:sex&quot;), pairwise = TRUE ) "],["phylogenetic-diversity-beta_q1p.html", "Chapter 9 Phylogenetic diversity (beta_q1p)", " Chapter 9 Phylogenetic diversity (beta_q1p) run_permanova( beta_matrix = beta_q1p, metadata = sample_metadata_without_NA, sample_col = &quot;sample&quot;, group_col = &quot;broad_environment&quot;, group_vars = c(&quot;broad_environment&quot;,&quot;sex&quot;, &quot;broad_environment:sex&quot;), pairwise = FALSE # no pairwise comparisons here ) "],["functional-diversity-beta_q1f.html", "Chapter 10 Functional diversity (beta_q1f)", " Chapter 10 Functional diversity (beta_q1f) run_permanova( beta_matrix = beta_q1f, metadata = sample_metadata_without_NA, sample_col = &quot;sample&quot;, group_col = &quot;broad_environment&quot;, group_vars = c(&quot;broad_environment&quot;,&quot;sex&quot;, &quot;broad_environment:sex&quot;), pairwise = TRUE ) 10.0.1 NMDS ####Richness beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(broad_environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = broad_environment, shape = as.factor(sex))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Environmental context&quot;, shape=&quot;sex&quot;)+geom_text_repel(aes(label = sample), size=3) 10.0.1.1 Neutral diversity beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(broad_environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = broad_environment, shape = as.factor(sex))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;Evironmental context&quot;, shape=&quot;sex&quot;) 10.0.1.2 Phylogenetic diversity beta_q1p$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(broad_environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = broad_environment, shape = as.factor(sex))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;environment context&quot;, shape=&quot;sex&quot;)+geom_text_repel(aes(label = sample), size=3) 10.0.1.3 Functional diversity beta_q1f$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(broad_environment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = broad_environment, shape = as.factor(sex))) + geom_point(size = 4) + scale_color_manual(values = treatment_colors,labels=c(&quot;high&quot; = &quot;High-altitude&quot;, &quot;low&quot; = &quot;Low-altitude&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) + labs(color=&quot;broad_environment&quot;, shape=&quot;sex&quot;)+geom_text_repel(aes(label = sample), size=3) "],["gut-microbiota-differential-abundance-analysis.html", "Chapter 11 Gut microbiota: Differential abundance analysis 11.1 Structural zeros 11.2 MAGs in different locations and shared among locations 11.3 Enrichment analysis between male and female: Ancombc2", " Chapter 11 Gut microbiota: Differential abundance analysis 11.1 Structural zeros #complett absence of a microbe/genome/function in one group 11.2 MAGs in different locations and shared among locations 11.3 Enrichment analysis between male and female: Ancombc2 11.3.1 With random effect 11.3.1.1 MAG level 11.3.1.1.1 Controling structural components in Ancombc 11.3.1.2 Phylum level 11.3.1.3 Family level 11.3.1.4 Genera 11.3.2 Without random effect 11.3.2.1 MAG level 11.3.2.1.1 Controling structural components in Ancombc 11.3.3 Phylum level 11.3.4 Family level 11.3.5 Genera "],["gut-microbiota-functional-analysis.html", "Chapter 12 Gut microbiota: functional analysis 12.1 MCI 12.2 Wilcoxon", " Chapter 12 Gut microbiota: functional analysis 12.1 MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% # filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(sex) %&gt;% summarise(MCI = mean(value), sd = sd(value)) ## # A tibble: 3 × 3 ## sex MCI sd ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Male 0.216 0.0172 ## 2 Female 0.200 0.0243 ## 3 &lt;NA&gt; NaN NA MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) # %&gt;% # filter(diet!=&quot;Post_grass&quot;) shapiro.test(MCI$value) ## ## Shapiro-Wilk normality test ## ## data: MCI$value ## W = 0.98662, p-value = 0.6453 wilcox.test(value ~ sex, data=MCI) ## ## Wilcoxon rank sum exact test ## ## data: value by sex ## W = 591, p-value = 0.006669 ## alternative hypothesis: true location shift is not equal to 0 12.2 Wilcoxon 12.2.1 Community elements differences: difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + # geom_point(size=4) + scale_fill_manual(values=treatment_colors) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Elevation&quot;) 12.2.2 Community functions differences function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata %&gt;% select(sample,sex,broad_environment), by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,sex,broad_environment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ sex)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) function_gift_t &lt;- function_gift %&gt;% select(-sex) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) function_gift_filt &lt;- subset(function_gift_t, trait %in% significant_functional$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata %&gt;% select(sample,sex,broad_environment), by = join_by(sample == sample)) %&gt;% filter(!is.na(sex)) function_gift_filt %&gt;% select(-c(sample,broad_environment)) %&gt;% group_by(sex) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Code_function&quot;) %&gt;% left_join(unique_funct_db[c(1,3)],by = join_by(Code_function == Code_function)) function_gift_names &lt;- function_gift_filt%&gt;% select(-c(sex,broad_environment)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Code_function&quot;) %&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(Code_function == Code_function))%&gt;% select(-Code_function)%&gt;% select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(sample_metadata %&gt;% select(sample,sex,broad_environment), by = join_by(sample == sample)) colNames &lt;- names(function_gift_names)[2] for(i in colNames){ plt &lt;- ggplot(function_gift_names, aes(x=sex, y=.data[[i]], color = sex, fill=sex)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors)+ theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 12.2.3 Community domains differences domain_gift &lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(sample_metadata %&gt;% select(sample,sex,broad_environment), by=&quot;sample&quot;) unique_domain_db&lt;- GIFT_db[c(4)] %&gt;% distinct(Domain, .keep_all = TRUE) significant_domain &lt;- domain_gift %&gt;% pivot_longer(-c(sample,sex,broad_environment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ sex)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
