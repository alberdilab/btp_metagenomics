[["index.html", "AlberdiLab | Manuscript in prep Brush-tail possum metagenomics Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Manuscript in prep Brush-tail possum metagenomics Lukas Fix, Antton Alberdi, Raphael Eisenhofer[University of Copenhagen, raphael.eisenhofer@sund.ku.dk] 2025-05-01 Chapter 1 Introduction 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/btp_metagenomics.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(emmeans) library(vegan) #library(lmerTest) library(Hmsc) library(corrplot) library(lme4) library(nlme) library(ANCOMBC) #map visualtisation library(rnaturalearth) library(rnaturalearthdata) library(patchwork) "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/merged_metadata.tsv&quot;) %&gt;% rename(sample=1) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0167_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample))) 2.1.3 Genome taxonomy genome_metadata &lt;- read_tsv(&quot;data/DMB0167_mag_info.tsv.gz&quot;) %&gt;% rename(length=mag_size)%&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) 2.1.4 Genome base hits genome_coverage &lt;- read_tsv(&quot;data/DMB0167_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% semi_join(., genome_metadata, by = &quot;genome&quot;)%&gt;% arrange(match(genome, read_counts$genome)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0167.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips 2.1.6 Genome annotations Downloading individual annotation files from ERDA using information in Airtable and writing them to a single compressed table takes a while. The following chunk only needs to be run once, to generate the genome_annotations table that is saved in the data directory. Note that the airtable connection requires a personal access token. airtable(&quot;MAGs&quot;, &quot;appWbHBNLE6iAsMRV&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;mag_name&quot;,&quot;number_genes&quot;,&quot;anno_url&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(mag_name %in% paste0(genome_metadata$genome,&quot;.fa&quot;)) %&gt;% #filter by MAG name filter(number_genes &gt; 0) %&gt;% #genes need to exist select(anno_url) %&gt;% #list MAG annotation urls pull() %&gt;% read_tsv() %&gt;% #load all tables rename(gene=1, genome=2, contig=3) %&gt;% #rename first 3 columns write_tsv(file=&quot;data/genome_annotations.tsv.xz&quot;) #write to overall compressed file genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by coverage min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Filter Data 3.2 Load Map 3.3 Plot Possum Locations 3.4 Load Map 3.5 Plot Possum Locations 3.6 Sequencing reads statistics 3.7 DNA fractions 3.8 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) #Visualisation of geographical location of samples and their respectiv envirotypes 3.1 Filter Data # Define extended boundary to include all possum data points lat_min &lt;- -45.0 # Slightly smaller than -42.93 lat_max &lt;- -28.0 # Slightly larger than -30.65 lon_min &lt;- 110.0 # Slightly smaller than 116.47 lon_max &lt;- 150.0 # Slightly larger than 148.28 # Full dataset with all points (Tasmania &amp; Australia border) full_possums &lt;- sample_metadata %&gt;% filter(latitude &gt;= lat_min &amp; latitude &lt;= lat_max, longitude &gt;= lon_min &amp; longitude &lt;= lon_max) # Filter for Tasmania only tasmania_possums &lt;- full_possums %&gt;% filter(latitude &lt; -38 &amp; latitude &gt; -45, # Tasmania lat range longitude &gt; 140 &amp; longitude &lt; 150) # Tasmania lon range # Aggregate possum count per location full_possums_count &lt;- full_possums %&gt;% group_by(latitude, longitude, broad_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) tasmania_possums_count &lt;- tasmania_possums %&gt;% group_by(latitude, longitude, broad_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) 3.2 Load Map # Load world map australia_map &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) %&gt;% filter(admin == &quot;Australia&quot;) 3.3 Plot Possum Locations # Get Tasmania data range to set zoom lat_range &lt;- range(tasmania_possums$latitude, na.rm = TRUE) lon_range &lt;- range(tasmania_possums$longitude, na.rm = TRUE) # Count total possums total_full &lt;- sum(full_possums_count$count) total_tasmania &lt;- sum(tasmania_possums_count$count) # Plot 1: Full Dataset (Including Border Data) map_plot_full &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + # Base map geom_point(data = full_possums_count, aes(x = longitude, y = latitude, color = broad_environment, size = count), alpha = 0.8) + theme_minimal() + labs(title = paste(&quot;PD - Full Dataset (&quot;, total_full, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;, color = &quot;Environment Type&quot;, size = &quot;Count&quot;, shape = &quot;species&quot;) + theme(legend.position = &quot;none&quot;, plot.title = element_text(size = 14, face = &quot;bold&quot;)) # Plot 2: Zoomed-in Tasmania (with entire landmass and cleaned longitude labels) map_plot_zoomed &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + # Base map geom_point(data = tasmania_possums_count, aes(x = longitude, y = latitude, color = broad_environment, size = count), alpha = 0.8) + coord_sf(xlim = c(143, 149), ylim = c(-44, -39)) + # Full Tasmania view theme_minimal() + labs(title = paste(&quot;PD - Tasmania (&quot;, total_tasmania, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;, color = &quot;Environment Type&quot;, size = &quot;Count&quot;, shape = &quot;species&quot; ) + theme(legend.position = &quot;right&quot;, axis.text.x = element_text(angle = 0, hjust = 0.5), plot.title = element_text(size = 14, face = &quot;bold&quot;)) # Combine the plots side by side with shared legend and increased size (map_plot_full + map_plot_zoomed) + plot_layout(guides = &quot;collect&quot;, widths = c(1, 1.2)) # Define extended boundary to include all possum data points lat_min &lt;- -45.0 # Slightly smaller than -42.93 lat_max &lt;- -28.0 # Slightly larger than -30.65 lon_min &lt;- 110.0 # Slightly smaller than 116.47 lon_max &lt;- 150.0 # Slightly larger than 148.28 # Full dataset with all points (Tasmania &amp; Australia border) full_possums &lt;- sample_metadata %&gt;% filter(latitude &gt;= lat_min &amp; latitude &lt;= lat_max, longitude &gt;= lon_min &amp; longitude &lt;= lon_max) # Filter for Tasmania only tasmania_possums &lt;- full_possums %&gt;% filter(latitude &lt; -38 &amp; latitude &gt; -45, # Tasmania lat range longitude &gt; 140 &amp; longitude &lt; 150) # Tasmania lon range # Aggregate possum count per location full_possums_count &lt;- full_possums %&gt;% group_by(latitude, longitude, local_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) tasmania_possums_count &lt;- tasmania_possums %&gt;% group_by(latitude, longitude, local_environment) %&gt;% summarise(count = n(), .groups = &quot;drop&quot;) 3.4 Load Map # Load world map australia_map &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) %&gt;% filter(admin == &quot;Australia&quot;) 3.5 Plot Possum Locations library(RColorBrewer) # Get Tasmania data range to set zoom lat_range &lt;- range(tasmania_possums$latitude, na.rm = TRUE) lon_range &lt;- range(tasmania_possums$longitude, na.rm = TRUE) # Count total possums total_full &lt;- sum(full_possums_count$count) total_tasmania &lt;- sum(tasmania_possums_count$count) # Plot 1: Full Dataset (Including Border Data) map_plot_full &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + geom_point(data = full_possums_count, aes(x = longitude, y = latitude, color = local_environment, size = count), alpha = 0.8) + scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + labs(title = paste(&quot;PD - Full Dataset (&quot;, total_full, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), legend.position = &quot;none&quot; ) # Plot 2: Zoomed-in Tasmania map_plot_zoomed &lt;- ggplot() + geom_sf(data = australia_map, fill = &quot;lightgray&quot;, color = &quot;black&quot;) + geom_point(data = tasmania_possums_count, aes(x = longitude, y = latitude, color = local_environment, size = count), alpha = 0.8) + coord_sf(xlim = c(143, 149), ylim = c(-44, -39)) + scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + labs(title = paste(&quot;PD - Tasmania (&quot;, total_tasmania, &quot;)&quot;), x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), axis.text.x = element_text(angle = 0, hjust = 0.5), legend.position = &quot;none&quot; ) # Combine the plots side by side (map_plot_full + map_plot_zoomed) + plot_layout(widths = c(1, 1.2)) # Step 1: Create simplified/aggregated legend data legend_data &lt;- tasmania_possums_count %&gt;% group_by(local_environment) %&gt;% summarise(mean_count = mean(count, na.rm = TRUE)) %&gt;% filter(!is.na(local_environment)) %&gt;% arrange(desc(mean_count)) %&gt;% mutate(env_label = paste0(local_environment)) # Step 2: Plot custom &quot;legend&quot; with clean layout custom_legend_plot &lt;- ggplot(legend_data, aes(x = 1, y = reorder(env_label, mean_count), color = env_label, size = mean_count)) + geom_point(show.legend = FALSE) + scale_size_continuous(range = c(3, 6)) + # tweak dot size scaling scale_color_viridis_d(name = &quot;Environment Type&quot;, option = &quot;D&quot;) + theme_minimal() + theme( axis.title = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.margin = margin(10, 30, 10, 10), axis.text.y = element_text(size = 9, hjust = 0) ) # Show it custom_legend_plot 3.6 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_g54lp4fbcnjkbgzq1qvt, .table th.tinytable_css_g54lp4fbcnjkbgzq1qvt { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_327ry9hwi8rulctv5b7c, .table th.tinytable_css_327ry9hwi8rulctv5b7c { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Total Average 354.78 4.86 ± 1.43 3.7 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample,mags,metagenomic_bases,host_bases,bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() .table td.tinytable_css_t4g6p7lepit6yp8gejlv, .table th.tinytable_css_t4g6p7lepit6yp8gejlv { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2su1xu7ndenal8k2kqf2, .table th.tinytable_css_2su1xu7ndenal8k2kqf2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI01248 0.35511316 0.004968189 2.3488847 8.70559471 EHI01253 0.15065275 0.007306842 0.7958509 3.15690325 EHI01254 0.17713763 0.008641986 0.7698065 3.46426201 EHI01256 0.25601713 0.011186636 1.6153318 4.62283158 EHI01257 0.44278829 0.028219625 1.6424801 6.37891199 EHI01258 0.18025206 0.021893733 0.9061351 3.11043101 EHI01259 0.15785294 0.002551853 1.1230441 3.63491878 EHI01264 0.10980388 0.194713827 0.8459937 1.94399131 EHI01265 0.20096759 0.027838593 0.8781951 4.42282487 EHI01266 0.16495605 0.004145198 1.0104139 3.02528367 EHI01268 0.11654687 0.043538943 0.4199424 2.18818215 EHI01270 0.15490780 0.006255568 0.7491831 1.85948097 EHI01271 0.08546883 0.008773597 0.5176363 1.98955149 EHI01272 0.12521297 0.004006385 0.6499615 2.73090343 EHI01273 0.18374616 0.099650655 1.1683174 3.70517179 EHI01339 0.21133261 0.082072269 1.0958456 4.01574329 EHI01340 0.32934907 0.078517930 2.2365738 0.01091408 EHI01341 0.26571726 0.023522716 1.3209604 3.21859599 EHI01342 0.21296031 0.114741396 1.6557153 3.12134276 EHI01343 0.18906343 0.112255644 1.1418032 3.97856774 EHI01345 0.20874962 0.177845762 1.5032861 3.47998475 EHI01387 0.23576644 4.644537522 0.4353141 1.57377576 EHI01389 0.22833259 0.150555697 1.5157673 4.06490864 EHI02064 0.36180367 0.073958684 1.7560470 3.13915797 EHI02074 0.17452029 0.007193557 0.5946409 1.57287231 EHI02082 0.39485375 0.094697133 1.6620324 4.43909934 EHI02098 0.52162812 0.139932802 1.6241102 3.79457081 EHI02760 0.27278081 0.117175084 0.5856983 2.76896198 EHI02766 0.34206992 0.026262224 1.0131013 3.38893828 EHI02767 0.39776392 0.027589923 1.4920663 4.50953237 EHI02768 0.37285123 0.057921344 0.6534089 2.85662184 EHI02769 0.23901114 0.015625837 0.5237186 1.80651100 EHI02770 0.26006960 0.015636651 0.8099749 2.58298046 EHI02771 0.43362442 0.078674560 0.8927819 3.75367475 EHI02772 0.39350819 0.133333189 0.9955418 3.97147448 EHI02773 0.47175703 0.004630464 1.2818831 4.30891829 EHI02774 0.35219413 0.031638370 0.9683903 3.44730645 EHI02775 0.31535990 0.006253892 1.2347646 3.06181082 EHI02776 0.28106302 0.008270565 0.8075659 3.52331025 EHI02779 0.34735466 0.029550201 0.7625330 2.52847910 EHI02780 0.33353488 0.041239947 1.1610012 3.29078029 EHI02784 0.31121206 0.019685481 0.8413476 3.58321420 EHI02785 0.32741021 0.014638539 0.9515597 3.36888357 EHI02789 0.42120190 0.170396074 1.0281381 4.40650732 EHI02792 0.36123108 0.015462248 1.3463286 3.76356741 EHI02796 1.07935523 0.004050961 1.0416445 4.15780523 EHI02797 0.41305976 0.086506413 0.8415216 3.53097613 EHI02801 0.52781243 0.036344570 0.8388848 2.91079981 EHI02804 0.42394759 0.159371043 1.0649697 4.43245152 EHI02806 0.44246621 0.089581175 1.7887921 4.03903963 EHI02811 0.29358681 0.013750538 1.1729986 3.28550574 EHI02812 0.36744061 0.057112125 0.8678336 4.12914616 EHI02817 0.34058911 0.023035237 0.8059566 2.90095167 EHI02819 0.23782849 0.002853452 2.0747359 1.56371986 EHI02822 0.32932578 0.266269016 0.8566608 2.91142265 EHI02823 0.46831299 0.319368041 0.9890243 4.23615481 EHI02824 0.92746482 0.011070271 0.9754646 2.92498444 EHI02826 0.44208850 0.043681080 0.9461530 4.12595664 EHI02829 0.61719061 0.020333202 1.0838773 5.08522117 EHI02830 0.63356691 1.608315016 0.8548023 3.32875927 EHI02831 0.48579678 0.249927066 1.0747457 3.71679223 EHI02832 0.55980508 0.002363983 1.1179965 3.46662093 EHI02835 0.36642675 0.046904442 1.3031776 4.02345778 EHI02836 0.73282342 0.011061548 0.7145331 2.22777765 EHI02837 0.63165003 0.233233891 1.2696173 4.08635940 EHI02838 0.71576136 0.008130997 1.6067697 4.58593636 EHI02839 0.53704346 0.005429642 1.1846421 5.22051908 EHI02840 0.40520960 0.170732154 0.9714674 4.15870634 EHI02841 0.54078237 0.066720106 1.3402000 4.38657015 EHI02843 0.51124373 0.025768852 1.0209520 3.79170293 EHI02844 0.33724044 0.257831962 1.1673368 2.84963063 EHI02845 0.41473841 0.000195490 0.5934703 2.25767567 EHI02846 0.43528710 0.009803089 0.4380401 2.07829540 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() .table td.tinytable_css_whdriq8ujkk7o2mzo6oo, .table th.tinytable_css_whdriq8ujkk7o2mzo6oo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_q48par48axjgl0w7zpq4, .table th.tinytable_css_q48par48axjgl0w7zpq4 { border-bottom: solid #d3d8dc 0.1em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.3650321 0.1481815 1.08684 3.461414 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.8 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Gut microbiota", " Chapter 4 MAG catalogue 4.1 Gut microbiota load(&quot;data/data.Rdata&quot;) 4.1.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring # circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + # scale_fill_manual(values=phylum_colors) + # geom_tiplab2(size=1, hjust=-0.1) + # theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.24, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;)+ labs(fill=&quot;Contamination&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#74C8AE&quot;))+ labs(fill=&quot;New species&quot;) #theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) circular_tree &lt;- circular_tree + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), fill = &quot;#1e6e55&quot;, offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.1, y=0, label=&#39; Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.7, y=0, label=&#39; Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.1, y=0, label=&#39; Genome size&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.1.2 Taxonomy overview tax_mag &lt;-genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) tax_mag %&gt;% mutate(percetage_mag=round(mag_n*100/sum(mag_n), 2)) %&gt;% arrange(-percetage_mag) %&gt;% tt() .table td.tinytable_css_s1fnunr5uf86exah1cmh, .table th.tinytable_css_s1fnunr5uf86exah1cmh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_io4gmsl990ftre9udmqq, .table th.tinytable_css_io4gmsl990ftre9udmqq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum mag_n percetage_mag p__Bacillota_A 1440 79.25 p__Bacillota 94 5.17 p__Cyanobacteriota 82 4.51 p__Bacteroidota 71 3.91 p__Pseudomonadota 34 1.87 p__Actinomycetota 25 1.38 p__Synergistota 17 0.94 p__Campylobacterota 15 0.83 p__Thermoplasmatota 12 0.66 p__Desulfobacterota 8 0.44 p__Bacillota_C 7 0.39 p__Verrucomicrobiota 6 0.33 p__Spirochaetota 4 0.22 p__Bacillota_B 1 0.06 p__Methanobacteriota 1 0.06 4.1.3 Mag size (MB) genome_metadata &lt;-genome_metadata %&gt;% mutate(corrected_size=100*length/completeness) %&gt;% arrange(completeness) Mags average size (MB) genome_metadata %&gt;% summarise(Average_corrected_size=mean(corrected_size)) # A tibble: 1 × 1 Average_corrected_size &lt;dbl&gt; 1 2305214. 4.1.4 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_j1scjiqvxld91bpgxl99, .table th.tinytable_css_j1scjiqvxld91bpgxl99 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hbbuaq2gn8a2xq7n8mv6, .table th.tinytable_css_hbbuaq2gn8a2xq7n8mv6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Completeness Contamination 79.4 ± 16.77 2.79 ± 2.58 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.1.5 Functional overview 4.1.6 Functional overview Predicted genes genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) # Predicted genes pred_genes &lt;- genome_annotations %&gt;% nrow() cat(pred_genes) 1736968 Number of annotated genes and percentages # Some annotation genome_annota &lt;- genome_annotations %&gt;% filter(if_any(c(kegg_id, pfam_hits, cazy_hits), ~ !is.na(.))) %&gt;% nrow() cat(genome_annota) 1335016 # Some annotation percentage genome_annota*100/pred_genes [1] 76.85899 Number of KEGG annotatated genes and percentages # KEGG annotation kegg_annota &lt;- genome_annotations %&gt;% filter(!is.na(kegg_id)) %&gt;% nrow() cat(kegg_annota) 791897 # KEGG annotation percentage kegg_annota*100/genome_annota [1] 59.31742 # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.1.7 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Gut microbiota", " Chapter 5 Community composition 5.1 Gut microbiota load(&quot;data/data.Rdata&quot;) 5.1.1 Taxonomy overview 5.1.1.1 Phylum level genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;white&quot;), strip.text = element_text(size = 12, lineheight = 0.6,face=&quot;bold&quot;), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of MAGs 1817 Number of bacteria phyla 13 Number of Archaea phyla 2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,broad_environment, sex) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE) ) %&gt;% mutate(Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum, Total) # A tibble: 15 × 2 phylum Total &lt;chr&gt; &lt;chr&gt; 1 p__Bacillota_A 60.713±17.816 2 p__Bacteroidota 15.337±12.756 3 p__Bacillota 10.651±15.13 4 p__Synergistota 2.856±1.778 5 p__Cyanobacteriota 2.624±3.286 6 p__Verrucomicrobiota 2.074±1.467 7 p__Pseudomonadota 1.207±2.219 8 p__Bacillota_C 1.133±0.683 9 p__Thermoplasmatota 0.868±1.487 10 p__Campylobacterota 0.866±1.568 11 p__Actinomycetota 0.749±1.478 12 p__Desulfobacterota 0.681±0.697 13 p__Spirochaetota 0.189±0.607 14 p__Methanobacteriota 0.03±0.061 15 p__Bacillota_B 0.02±0.043 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Bacteria phyla in individuals from females 12 13 Bacteria phyla in individuals from Temperate woodland 13 Bacteria phyla in individuals from Xeric shrubland 13 Bacteria phyla in individuals from mixed_forest 11 Bacteria phyla in individuals from cropland 12 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), er_mean = mean(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), er_sd = sd(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), go_mean = mean(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE), go_sd = sd(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Cropland = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Mixed_forest = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)), Xeric_shrubland = str_c(round(er_mean, 3), &quot;±&quot;, round(er_sd, 3)), Temperate_woodland = str_c(round(go_mean, 3), &quot;±&quot;, round(go_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(phylum, Total, Cropland, Temperate_woodland, Mixed_forest, Xeric_shrubland) # A tibble: 15 × 6 phylum Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacillota_A 60.7… 58.875±… 63.149±17.119 34.394±18.0… 57.552±18.161 2 p__Bacteroido… 15.3… 15.481±… 14.668±12.774 10.876±11.5… 26.428±17.109 3 p__Bacillota 10.6… 14.427±… 8.561±12.074 38.211±25.4… 2.336±1.65 4 p__Synergisto… 2.85… 2.215±1… 2.877±1.824 4.395±1.665 3.122±2.054 5 p__Cyanobacte… 2.62… 2.238±2… 2.907±3.671 3.894±2.743 0.326±0.377 6 p__Verrucomic… 2.07… 1.534±0… 1.998±1.116 4.934±2.723 2.134±0.872 7 p__Pseudomona… 1.20… 0.769±0… 1.405±2.689 0.769±0.157 0.558±0.257 8 p__Bacillota_C 1.13… 1.154±0… 1.138±0.762 1.145±0.526 0.894±0.286 9 p__Thermoplas… 0.86… 1.874±2… 0.475±1.01 0.209±0.204 2.817±0.979 10 p__Campylobac… 0.86… 0.776±0… 0.746±1.234 0.611±0.499 2.261±4.129 11 p__Actinomyce… 0.74… 0.108±0… 1.036±1.75 0.286±0.281 0.278±0.522 12 p__Desulfobac… 0.68… 0.483±0… 0.773±0.768 0.275±0.289 0.653±0.615 13 p__Spirochaet… 0.18… 0±0 0.211±0.697 0±0 0.62±0.635 14 p__Methanobac… 0.03… 0.036±0… 0.037±0.071 0±0 0±0 15 p__Bacillota_B 0.02… 0.032±0… 0.017±0.045 0±0 0.022±0.028 phylum_summary %&gt;% group_by(phylum) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(phylum, Total, Female, Male) # A tibble: 15 × 4 phylum Total Female Male &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 p__Bacillota_A 60.713±17.816 59.012±21.422 63.183±14.871 2 p__Bacteroidota 15.337±12.756 14.648±11.721 13.48±11.248 3 p__Bacillota 10.651±15.13 12.942±17.914 10.184±13.886 4 p__Synergistota 2.856±1.778 2.967±1.775 2.65±1.655 5 p__Cyanobacteriota 2.624±3.286 2.659±3.026 2.965±3.089 6 p__Verrucomicrobiota 2.074±1.467 2.067±1.288 2.274±1.798 7 p__Pseudomonadota 1.207±2.219 1.234±1.949 0.951±0.784 8 p__Bacillota_C 1.133±0.683 1.37±0.897 1.025±0.503 9 p__Thermoplasmatota 0.868±1.487 0.766±1.708 0.723±1.287 10 p__Campylobacterota 0.866±1.568 0.53±0.754 0.991±1.341 11 p__Actinomycetota 0.749±1.478 1.128±2.008 0.609±1.113 12 p__Desulfobacterota 0.681±0.697 0.615±0.587 0.652±0.486 13 p__Spirochaetota 0.189±0.607 0±0 0.277±0.83 14 p__Methanobacteriota 0.03±0.061 0.044±0.069 0.013±0.025 15 p__Bacillota_B 0.02±0.043 0.018±0.041 0.023±0.05 5.1.1.2 Family level Percentange of families in each group of environment family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family, broad_environment, sex) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(broad_environment == &quot;1000245 - Cropland&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(broad_environment == &quot;1000198 - Mixed forest&quot;, relabun * 100, NA), na.rm = TRUE), er_mean = mean(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), er_sd = sd(ifelse(broad_environment == &quot;1000218 - Xeric shrubland&quot;, relabun * 100, NA), na.rm = TRUE), go_mean = mean(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE), go_sd = sd(ifelse(broad_environment == &quot;1000221 - Temperate woodland&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Cropland = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Mixed_forest = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)), Xeric_shrubland = str_c(round(er_mean, 3), &quot;±&quot;, round(er_sd, 3)), Temperate_woodland = str_c(round(go_mean, 3), &quot;±&quot;, round(go_sd, 3)) ) %&gt;% dplyr::select(family,Total,Cropland, Temperate_woodland, Mixed_forest, Xeric_shrubland) # A tibble: 52 × 6 family Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__ 0.02… 0.002±0… 0.033±0.077 0.006±0.014 0±0 2 f__Acidaminoc… 1.11… 1.154±0… 1.112±0.727 1.145±0.526 0.894±0.286 3 f__Acutalibac… 0.43… 0.308±0… 0.501±0.512 0.204±0.372 0.449±0.299 4 f__Akkermansi… 1.93… 1.534±0… 1.887±1.118 4.934±2.723 1.301±1.184 5 f__Anaerotign… 0.04… 0.044±0… 0.042±0.041 0.005±0.011 0.074±0.067 6 f__Anaerovora… 0.02… 0.009±0… 0.02±0.042 0.112±0.11 0±0 7 f__Bacteroida… 10.6… 9.816±5… 9.817±11.399 9.473±10.239 22.416±13.948 8 f__Borkfalkia… 7.43… 11.275±… 7.088±5.26 3.208±2.553 5.841±3.717 9 f__Burkholder… 0.05… 0.039±0… 0.042±0.095 0.038±0.056 0.174±0.184 10 f__Burkholder… 0.57… 0.523±0… 0.58±0.637 0.699±0.226 0.383±0.242 # ℹ 42 more rows family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~broad_environment)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), le_sd=sd(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), ha_mean=mean(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), ha_sd=sd(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), er_mean=mean(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), er_sd=sd(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), go_mean=mean(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T), go_sd=sd(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Cropland=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Mixed_forest=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Xeric_shrubland=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Temperate_woodland=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Cropland,Temperate_woodland, Mixed_forest,Xeric_shrubland) # A tibble: 52 × 6 family Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Lachnospir… 28.2… 25.865±… 29.657±10.487 22.929±12.4… 22.276±6.399 2 f__Oscillospi… 11.2… 6.852±2… 12.307±8.693 4.256±3.422 17.81±7.479 3 f__Bacteroida… 10.6… 9.816±5… 9.817±11.399 9.473±10.239 22.416±13.948 4 f__CAG-288 8.63… 11.701±… 6.449±11.978 37.695±25.73 0.245±0.538 5 f__Borkfalkia… 7.43… 11.275±… 7.088±5.26 3.208±2.553 5.841±3.717 6 f__Ruminococc… 5.42… 6.017±5… 5.389±4.49 1.722±1.147 3.322±2.259 7 f__CAG-508 4.04… 4.664±4… 4.107±4.212 0.146±0.267 3.826±3.273 8 f__Dethiosulf… 2.45… 2.049±1… 2.405±1.661 3.993±1.662 2.626±1.872 9 f__Muribacula… 2.05… 2.813±5… 2.341±4.499 0.386±0.863 0±0 10 f__UBA932 1.96… 2.294±3… 1.763±3.655 0.915±2.046 3.7±6.208 # ℹ 42 more rows Family summary grouped by sex family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% select(family, Total, Female, Male) # A tibble: 52 × 4 family Total Female Male &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Lachnospiraceae 28.205±9.998 29.818±13.448 28.926±7.093 2 f__Oscillospiraceae 11.223±8.158 8.451±7.695 11.752±6.237 3 f__Bacteroidaceae 10.696±11.055 9.231±9.11 9.336±9.589 4 f__CAG-288 8.635±15.251 11.469±18.156 7.94±13.683 5 f__Borkfalkiaceae 7.439±5.295 7.529±6.085 7.343±4.351 6 f__Ruminococcaceae 5.429±4.762 5.14±3.989 6.359±5.72 7 f__CAG-508 4.042±4.359 3.495±4.278 4.605±4.655 8 f__Dethiosulfovibrionaceae 2.454±1.626 2.599±1.648 2.294±1.494 9 f__Muribaculaceae 2.053±4.249 2.968±5.555 1.326±2.19 10 f__UBA932 1.966±3.772 1.695±3.403 2.367±3.922 # ℹ 42 more rows family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() # Per environment family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~sex)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) family_summary %&gt;% group_by(family) %&gt;% summarise( total_mean = mean(relabun * 100, na.rm = TRUE), total_sd = sd(relabun * 100, na.rm = TRUE), le_mean = mean(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), le_sd = sd(ifelse(sex == &quot;Female&quot;, relabun * 100, NA), na.rm = TRUE), ha_mean = mean(ifelse( sex== &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE), ha_sd = sd(ifelse(sex == &quot;Male&quot;, relabun * 100, NA), na.rm = TRUE) ) %&gt;% mutate( Total = str_c(round(total_mean, 3), &quot;±&quot;, round(total_sd, 3)), Female = str_c(round(le_mean, 3), &quot;±&quot;, round(le_sd, 3)), Male = str_c(round(ha_mean, 3), &quot;±&quot;, round(ha_sd, 3)) ) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,Female, Male) # A tibble: 52 × 4 family Total Female Male &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 f__Lachnospiraceae 28.205±9.998 29.818±13.448 28.926±7.093 2 f__Oscillospiraceae 11.223±8.158 8.451±7.695 11.752±6.237 3 f__Bacteroidaceae 10.696±11.055 9.231±9.11 9.336±9.589 4 f__CAG-288 8.635±15.251 11.469±18.156 7.94±13.683 5 f__Borkfalkiaceae 7.439±5.295 7.529±6.085 7.343±4.351 6 f__Ruminococcaceae 5.429±4.762 5.14±3.989 6.359±5.72 7 f__CAG-508 4.042±4.359 3.495±4.278 4.605±4.655 8 f__Dethiosulfovibrionaceae 2.454±1.626 2.599±1.648 2.294±1.494 9 f__Muribaculaceae 2.053±4.249 2.968±5.555 1.326±2.19 10 f__UBA932 1.966±3.772 1.695±3.403 2.367±3.922 # ℹ 42 more rows 5.1.1.3 Genus level *** Percetange of genera in each group of environment*** genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus,broad_environment) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), le_sd=sd(relabun[broad_environment==&quot;1000245 - Cropland&quot;]*100, na.rm=T), ha_mean=mean(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), ha_sd=sd(relabun[broad_environment==&quot;1000198 - Mixed forest&quot;]*100, na.rm=T), er_mean=mean(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), er_sd=sd(relabun[broad_environment==&quot;1000218 - Xeric shrubland&quot;]*100, na.rm=T), go_mean=mean(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T), go_sd=sd(relabun[broad_environment==&quot;1000221 - Temperate woodland&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Cropland=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Mixed_forest=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3)), Xeric_shrubland=str_c(round(er_mean,3),&quot;±&quot;,round(er_sd,3)), Temperate_woodland=str_c(round(go_mean,3),&quot;±&quot;,round(go_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total, Cropland,Temperate_woodland, Mixed_forest,Xeric_shrubland) # A tibble: 173 × 6 genus Total Cropland Temperate_woodland Mixed_forest Xeric_shrubland &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 g__Prevotella 9.08… 9.381±5… 8.141±10.756 4.235±6.183 21.397±13.482 2 g__Enterosoma 8.63… 11.701±… 6.449±11.978 37.695±25.73 0.245±0.538 3 g__Coproplasma 6.80… 10.681±… 6.328±4.94 3.196±2.54 5.313±3.765 4 g__RGIG6307 5.31… 4.127±2… 5.707±5.151 0.477±0.289 6.745±2.756 5 g__Onthomonas 4.35… 3.628±2… 4.237±3.041 2.906±2.533 7.746±5.474 6 g__Ventrimonas 4.34… 3.449±4… 4.925±6.094 5.197±3.825 0.795±0.458 7 g__Eubacteriu… 3.26… 2.489±3… 3.597±2.571 2.763±2.006 2.887±1.925 8 g__Choladousia 2.62… 2.029±0… 2.638±1.7 1.956±1.192 2.869±1.766 9 g__Faeciplasma 2.6±… 3.158±4… 2.748±3.049 1.153±0.718 0.746±1.353 10 g__Agathobact… 2.50… 1.917±2… 2.575±3.063 2.888±1.871 1.333±1.002 # ℹ 163 more rows genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~broad_environment)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) *** Percetange of genera in each group of sex*** genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,phylum,genus,sex) %&gt;% summarise(relabun=sum(count)) # %&gt;% # filter(genus != &quot;g__&quot;) %&gt;% # mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), le_mean=mean(relabun[sex==&quot;Female&quot;]*100, na.rm=T), le_sd=sd(relabun[sex==&quot;Female&quot;]*100, na.rm=T), ha_mean=mean(relabun[sex==&quot;Male&quot;]*100, na.rm=T), ha_sd=sd(relabun[sex==&quot;Male&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), Female=str_c(round(le_mean,3),&quot;±&quot;,round(le_sd,3)), Male=str_c(round(ha_mean,3),&quot;±&quot;,round(ha_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,Male,Female) # A tibble: 173 × 4 genus Total Male Female &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 g__Prevotella 9.081±10.534 6.761±8.201 8.435±8.906 2 g__Enterosoma 8.635±15.251 7.94±13.683 11.469±18.156 3 g__Coproplasma 6.807±5.002 6.852±4.084 6.752±5.903 4 g__RGIG6307 5.319±4.84 6.178±5.285 4.467±5.172 5 g__Onthomonas 4.353±3.228 5.021±2.992 3.351±2.586 6 g__Ventrimonas 4.342±5.43 3.935±3.668 6.022±7.312 7 g__Eubacterium_I 3.269±2.549 3.336±1.804 3.328±2.91 8 g__Choladousia 2.622±1.668 3.109±1.545 2.266±1.754 9 g__Faeciplasma 2.6±3.197 3.338±3.991 2.463±2.538 10 g__Agathobacter 2.501±2.807 2.548±1.862 2.905±3.867 # ℹ 163 more rows genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~sex)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) Number of MAGs without genera-level annotation 84 .table td.tinytable_css_ud15nwb5gdgpp0ymx8v0, .table th.tinytable_css_ud15nwb5gdgpp0ymx8v0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5ddn5yg33n34abaswsmr, .table th.tinytable_css_5ddn5yg33n34abaswsmr { border-bottom: solid #d3d8dc 0.1em; } phylum count_nogene count_total percentage p__Actinomycetota 5 25 20.000000 p__Bacillota 3 94 3.191489 p__Bacillota_A 71 1440 4.930556 p__Bacteroidota 1 71 1.408451 p__Cyanobacteriota 3 82 3.658537 p__Spirochaetota 1 4 25.000000 Percentage of MAGs without genus-level annotation 4.623005 Number of MAGs without species-level annotation # A tibble: 1 × 1 Mag_nospecies &lt;int&gt; 1 1547 .table td.tinytable_css_k6ew13zmwa0p0x3sz9y7, .table th.tinytable_css_k6ew13zmwa0p0x3sz9y7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_h45sszhdu0qmvyyn7zma, .table th.tinytable_css_h45sszhdu0qmvyyn7zma { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum count_nospecies count_total species_annotated percentage percentage_species p__Actinomycetota 25 25 0 100.00000 0.000000 p__Bacillota 93 94 1 98.93617 1.063830 p__Bacillota_A 1211 1440 229 84.09722 15.902778 p__Bacillota_B 1 1 0 100.00000 0.000000 p__Bacillota_C 7 7 0 100.00000 0.000000 p__Bacteroidota 53 71 18 74.64789 25.352113 p__Campylobacterota 13 15 2 86.66667 13.333333 p__Cyanobacteriota 74 82 8 90.24390 9.756098 p__Desulfobacterota 8 8 0 100.00000 0.000000 p__Methanobacteriota 1 1 0 100.00000 0.000000 p__Pseudomonadota 24 34 10 70.58824 29.411765 p__Spirochaetota 4 4 0 100.00000 0.000000 p__Synergistota 17 17 0 100.00000 0.000000 p__Thermoplasmatota 11 12 1 91.66667 8.333333 p__Verrucomicrobiota 5 6 1 83.33333 16.666667 Percentage of MAGs without species-level annotation 85.14034 "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Gut microbiota", " Chapter 6 Alpha diversity 6.1 Gut microbiota load(&quot;data/data.Rdata&quot;) treatment_colors &lt;- c(&quot;#f56042&quot;,&quot;#429ef5&quot;, &quot;#42f58d&quot;, &quot;#b142f5&quot;) sample_metadata$broad_environment &lt;- factor(sample_metadata$broad_environment, levels=c(&quot;1000198 - Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot;, &quot;1000218 - Xeric shrubland&quot;, &quot;1000245 - Cropland&quot;)) # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) .table td.tinytable_css_ojx5fsydws22z1f9leh6, .table th.tinytable_css_ojx5fsydws22z1f9leh6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ifj4unkkomvrko8x2s6j, .table th.tinytable_css_ifj4unkkomvrko8x2s6j { border-bottom: solid #d3d8dc 0.1em; } alpha Total Xeric_shrubland Temperate_woodland Cropland Mixed_forest richness 307.14±137.95 331.67±156.38 290.87±124.42 423.73±156.53 196.6±87.35 neutral 115.2±68.51 125.56±81.45 115.36±64.88 143.35±80.62 41.57±21.29 phylogenetic 7.35±1.43 7.66±1.29 7.17±1.38 8.68±0.97 6.41±1.48 functional 1.37±0.06 1.33±0.03 1.38±0.07 1.36±0.03 1.33±0.04 #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(300), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(190), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(12), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = broad_environment, group=broad_environment, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + scale_x_discrete(labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.y = c(2), label.x = c(1.5))+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) #Richness plot1 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Richness&quot;) plot2 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Neutral alpha diversity&quot;) plot3 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Phylogenetic alpha diversity&quot;) plot4 &lt;- alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% ggplot(aes(y = value, x = sex, group=sex, color=broad_environment, fill=broad_environment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5,outlier.shape = NA, show.legend = FALSE) + scale_color_manual(values=treatment_colors)+ scale_fill_manual(values=treatment_colors) + facet_grid(~factor(broad_environment, labels=c(&quot;1000218 - Xeric shrubland&quot; = &quot;Xeric shrubland&quot;, &quot;1000245 - Cropland&quot; = &quot;Cropland&quot;, &quot;1000198 - Mixed forest&quot; = &quot;Mixed forest&quot;, &quot;1000221 - Temperate woodland&quot; = &quot;Temperate woodland&quot;)), scale=&quot;free&quot;, space = &quot;free&quot;)+ coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( axis.title.x = element_blank(), strip.background = element_blank(), strip.text = element_text(size = 12, lineheight = 0.6), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size=10), axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)) )+ labs(y = &quot;Functional alpha diversity&quot;) 6.1.1 Mixed models alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) alpha_div_meta_clean &lt;- alpha_div_meta %&gt;% filter(!is.na(richness), !is.na(broad_environment), !is.na(sex)) alpha_dic_meta_filtered_out &lt;- anti_join(alpha_div_meta, alpha_div_meta_clean) Model_richness_random &lt;- lme(fixed = richness ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_richness_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 839.5593 852.6057 -413.7797 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 0.008726525 130.6703 Fixed effects: richness ~ broad_environment Value Std.Error DF t-value (Intercept) 196.60000 58.43755 63 3.364275 broad_environment1000221 - Temperate woodland 94.27234 61.46739 63 1.533697 broad_environment1000218 - Xeric shrubland 135.06667 79.12482 63 1.707008 broad_environment1000245 - Cropland 227.12727 70.47834 63 3.222654 p-value (Intercept) 0.0013 broad_environment1000221 - Temperate woodland 0.1301 broad_environment1000218 - Xeric shrubland 0.0927 broad_environment1000245 - Cropland 0.0020 Correlation: (Intr) b_1-Tw b_1-Xs broad_environment1000221 - Temperate woodland -0.951 broad_environment1000218 - Xeric shrubland -0.739 0.702 broad_environment1000245 - Cropland -0.829 0.788 0.612 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.01826423 -0.59594505 -0.05259295 0.53778635 2.81833452 Number of Observations: 69 Number of Groups: 3 Model_richness&lt;- lm(formula = richness ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_richness) Call: lm(formula = richness ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -233.17 -90.33 -15.44 64.67 398.83 Coefficients: Estimate Std. Error t value (Intercept) 181.84 62.51 2.909 broad_environment1000221 - Temperate woodland 100.48 61.96 1.622 broad_environment1000218 - Xeric shrubland 190.82 95.54 1.997 broad_environment1000245 - Cropland 252.32 73.93 3.413 sexMale 24.60 35.83 0.686 sexUnknown -40.99 54.92 -0.746 Pr(&gt;|t|) (Intercept) 0.00500 ** broad_environment1000221 - Temperate woodland 0.10984 broad_environment1000218 - Xeric shrubland 0.05012 . broad_environment1000245 - Cropland 0.00113 ** sexMale 0.49492 sexUnknown 0.45820 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 131.2 on 63 degrees of freedom Multiple R-squared: 0.1879, Adjusted R-squared: 0.1235 F-statistic: 2.916 on 5 and 63 DF, p-value: 0.01975 Model_richness_sex_random &lt;- lme(fixed = richness ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_richness_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 855.3131 866.2613 -422.6565 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 91.55575 131.3978 Fixed effects: richness ~ sex Value Std.Error DF t-value p-value (Intercept) 315.38637 56.23597 63 5.608268 0.0000 sexMale 20.39967 35.78908 63 0.569997 0.5707 sexUnknown -22.60735 51.66393 63 -0.437585 0.6632 Correlation: (Intr) sexMal sexMale -0.305 sexUnknown -0.384 0.313 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.73391907 -0.69697299 -0.09005648 0.55001895 3.07590111 Number of Observations: 69 Number of Groups: 4 emmeans(Model_richness_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Female 315 56.2 3 136 494 Male 336 56.7 3 155 516 Unknown 293 60.0 3 102 484 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Female - Male -20.4 35.8 63 -0.570 0.8365 Female - Unknown 22.6 51.7 63 0.438 0.9000 Male - Unknown 43.0 52.8 63 0.814 0.6959 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Model_neutral_random &lt;- lme(fixed = neutral ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_neutral_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 753.1275 766.1739 -370.5638 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 0.01169133 67.2097 Fixed effects: neutral ~ broad_environment Value Std.Error DF t-value (Intercept) 41.56942 30.05709 63 1.383015 broad_environment1000221 - Temperate woodland 73.78751 31.61548 63 2.333905 broad_environment1000218 - Xeric shrubland 83.99166 40.69750 63 2.063804 broad_environment1000245 - Cropland 101.78259 36.25022 63 2.807778 p-value (Intercept) 0.1715 broad_environment1000221 - Temperate woodland 0.0228 broad_environment1000218 - Xeric shrubland 0.0432 broad_environment1000245 - Cropland 0.0066 Correlation: (Intr) b_1-Tw b_1-Xs broad_environment1000221 - Temperate woodland -0.951 broad_environment1000218 - Xeric shrubland -0.739 0.702 broad_environment1000245 - Cropland -0.829 0.788 0.612 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.4449818 -0.6691391 -0.1669047 0.3792778 3.2466121 Number of Observations: 69 Number of Groups: 3 Model_neutral&lt;- lm(formula = neutral ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_neutral) Call: lm(formula = neutral ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -97.12 -46.15 -19.74 25.51 227.76 Coefficients: Estimate Std. Error t value (Intercept) 29.906 32.121 0.931 broad_environment1000221 - Temperate woodland 76.744 31.838 2.410 broad_environment1000218 - Xeric shrubland 105.122 49.095 2.141 broad_environment1000245 - Cropland 113.354 37.990 2.984 sexMale 19.439 18.411 1.056 sexUnknown -9.468 28.222 -0.335 Pr(&gt;|t|) (Intercept) 0.35538 broad_environment1000221 - Temperate woodland 0.01886 * broad_environment1000218 - Xeric shrubland 0.03613 * broad_environment1000245 - Cropland 0.00405 ** sexMale 0.29508 sexUnknown 0.73839 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 67.44 on 63 degrees of freedom Multiple R-squared: 0.1319, Adjusted R-squared: 0.06295 F-statistic: 1.914 on 5 and 63 DF, p-value: 0.1045 Model_neutral_sex_random &lt;- lme(fixed = neutral ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_neutral_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 766.6653 777.6136 -378.3327 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 36.90392 67.68043 Fixed effects: neutral ~ sex Value Std.Error DF t-value p-value (Intercept) 103.65156 24.73510 63 4.190465 0.0001 sexMale 17.05124 18.41660 63 0.925862 0.3581 sexUnknown 1.97674 25.98914 63 0.076060 0.9396 Correlation: (Intr) sexMal sexMale -0.358 sexUnknown -0.436 0.325 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.3291401 -0.6462863 -0.2914729 0.4321486 3.3753970 Number of Observations: 69 Number of Groups: 4 emmeans(Model_neutral_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Female 104 24.7 3 24.9 182 Male 121 25.0 3 41.2 200 Unknown 106 27.0 3 19.8 191 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Female - Male -17.05 18.4 63 -0.926 0.6261 Female - Unknown -1.98 26.0 63 -0.076 0.9968 Male - Unknown 15.07 26.5 63 0.568 0.8374 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Model_phylogenetic&lt;- lm(formula = phylogenetic ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_phylogenetic) Call: lm(formula = phylogenetic ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -2.8953 -0.8303 -0.0864 0.8537 2.8354 Coefficients: Estimate Std. Error t value (Intercept) 6.0979 0.6181 9.866 broad_environment1000221 - Temperate woodland 0.8647 0.6126 1.411 broad_environment1000218 - Xeric shrubland 2.1484 0.9447 2.274 broad_environment1000245 - Cropland 2.6940 0.7310 3.685 sexMale 0.5231 0.3543 1.476 sexUnknown -0.5821 0.5431 -1.072 Pr(&gt;|t|) (Intercept) 2.12e-14 *** broad_environment1000221 - Temperate woodland 0.163040 broad_environment1000218 - Xeric shrubland 0.026372 * broad_environment1000245 - Cropland 0.000477 *** sexMale 0.144792 sexUnknown 0.287893 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.298 on 63 degrees of freedom Multiple R-squared: 0.2396, Adjusted R-squared: 0.1792 F-statistic: 3.97 on 5 and 63 DF, p-value: 0.003417 Model_phylogenetic_sex_random &lt;- lme(fixed = phylogenetic ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) Model_phylogenetic_sex_random &lt;- lme(fixed = phylogenetic ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_phylogenetic_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik 246.6736 257.6219 -118.3368 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 1.061362 1.298932 Fixed effects: phylogenetic ~ sex Value Std.Error DF t-value p-value (Intercept) 7.487097 0.6230103 63 12.017614 0.0000 sexMale 0.486693 0.3539691 63 1.374960 0.1740 sexUnknown -0.400421 0.5174276 63 -0.773869 0.4419 Correlation: (Intr) sexMal sexMale -0.272 sexUnknown -0.348 0.306 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.24320777 -0.67562959 -0.02944919 0.76826749 2.16868710 Number of Observations: 69 Number of Groups: 4 emmeans(Model_phylogenetic_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Female 7.49 0.623 3 5.50 9.47 Male 7.97 0.627 3 5.98 9.97 Unknown 7.09 0.657 3 5.00 9.18 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Female - Male -0.487 0.354 63 -1.375 0.3601 Female - Unknown 0.400 0.517 63 0.774 0.7203 Male - Unknown 0.887 0.530 63 1.674 0.2231 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Model_functional_random &lt;- lme(fixed = functional ~ broad_environment, data = alpha_div_meta_clean, random = ~ 1 | sex) summary(Model_functional_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik -152.0073 -138.961 82.00367 Random effects: Formula: ~1 | sex (Intercept) Residual StdDev: 1.892689e-06 0.06362439 Fixed effects: functional ~ broad_environment Value Std.Error DF t-value (Intercept) 1.3345237 0.02845369 63 46.90160 broad_environment1000221 - Temperate woodland 0.0439193 0.02992894 63 1.46745 broad_environment1000218 - Xeric shrubland -0.0080552 0.03852648 63 -0.20908 broad_environment1000245 - Cropland 0.0228434 0.03431644 63 0.66567 p-value (Intercept) 0.0000 broad_environment1000221 - Temperate woodland 0.1472 broad_environment1000218 - Xeric shrubland 0.8351 broad_environment1000245 - Cropland 0.5081 Correlation: (Intr) b_1-Tw b_1-Xs broad_environment1000221 - Temperate woodland -0.951 broad_environment1000218 - Xeric shrubland -0.739 0.702 broad_environment1000245 - Cropland -0.829 0.788 0.612 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.22810505 -0.43884046 -0.08185877 0.28302102 5.73264352 Number of Observations: 69 Number of Groups: 3 Model_functional&lt;- lm(formula = functional ~ broad_environment+sex, data = alpha_div_meta_clean) summary(Model_functional) Call: lm(formula = functional ~ broad_environment + sex, data = alpha_div_meta_clean) Residuals: Min 1Q Median 3Q Max -0.08977 -0.02660 -0.00280 0.01922 0.32716 Coefficients: Estimate Std. Error t value (Intercept) 1.337357 0.030157 44.346 broad_environment1000221 - Temperate woodland 0.040116 0.029892 1.342 broad_environment1000218 - Xeric shrubland -0.049438 0.046094 -1.073 broad_environment1000245 - Cropland 0.006850 0.035668 0.192 sexMale -0.004723 0.017285 -0.273 sexUnknown 0.038550 0.026497 1.455 Pr(&gt;|t|) (Intercept) &lt;2e-16 *** broad_environment1000221 - Temperate woodland 0.184 broad_environment1000218 - Xeric shrubland 0.288 broad_environment1000245 - Cropland 0.848 sexMale 0.786 sexUnknown 0.151 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.06332 on 63 degrees of freedom Multiple R-squared: 0.115, Adjusted R-squared: 0.04475 F-statistic: 1.637 on 5 and 63 DF, p-value: 0.1632 Model_functional_sex_random &lt;- lme(fixed = functional ~ sex, data = alpha_div_meta_clean, random = ~ 1 | broad_environment) summary(Model_functional_sex_random) Linear mixed-effects model fit by REML Data: alpha_div_meta_clean AIC BIC logLik -154.8562 -143.9079 82.42811 Random effects: Formula: ~1 | broad_environment (Intercept) Residual StdDev: 0.02697055 0.0633351 Fixed effects: functional ~ sex Value Std.Error DF t-value p-value (Intercept) 1.3486083 0.02017472 63 66.84644 0.0000 sexMale -0.0041153 0.01721389 63 -0.23907 0.8118 sexUnknown 0.0211759 0.02367971 63 0.89426 0.3746 Correlation: (Intr) sexMal sexMale -0.412 sexUnknown -0.481 0.339 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.17588270 -0.40173812 -0.03575781 0.24511342 5.47095593 Number of Observations: 69 Number of Groups: 4 emmeans(Model_functional_sex_random, pairwise ~ sex) $emmeans sex emmean SE df lower.CL upper.CL Female 1.35 0.0202 3 1.28 1.41 Male 1.34 0.0204 3 1.28 1.41 Unknown 1.37 0.0226 3 1.30 1.44 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Female - Male 0.00412 0.0172 63 0.239 0.9690 Female - Unknown -0.02118 0.0237 63 -0.894 0.6459 Male - Unknown -0.02529 0.0241 63 -1.049 0.5489 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
